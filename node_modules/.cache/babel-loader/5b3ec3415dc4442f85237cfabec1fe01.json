{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar HLRU = require('hashlru');\n\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\n\nvar HLRU__default = /*#__PURE__*/_interopDefaultLegacy(HLRU);\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction getLruCache(cacheSize) {\n  if (cacheSize >= 1) {\n    return HLRU__default[\"default\"](cacheSize);\n  }\n\n  return {\n    get: function get() {\n      return undefined;\n    },\n    set: function set() {}\n  };\n}\n\nvar CLASS_PART_SEPARATOR = '-';\n\nfunction createClassUtils(config) {\n  var classMap = createClassMap(config);\n\n  function getClassGroupId(className) {\n    var classParts = className.split(CLASS_PART_SEPARATOR); // Classes like `-inset-1` produce an empty string as first classPart. We assume that classes for negative values are used correctly and remove it from classParts.\n\n    if (classParts[0] === '' && classParts.length !== 1) {\n      classParts.shift();\n    }\n\n    return getGroupRecursive(classParts, classMap) || getGroupIdForArbitraryProperty(className);\n  }\n\n  function getConflictingClassGroupIds(classGroupId) {\n    return config.conflictingClassGroups[classGroupId] || [];\n  }\n\n  return {\n    getClassGroupId: getClassGroupId,\n    getConflictingClassGroupIds: getConflictingClassGroupIds\n  };\n}\n\nfunction getGroupRecursive(classParts, classPartObject) {\n  var _classPartObject$vali;\n\n  if (classParts.length === 0) {\n    return classPartObject.classGroupId;\n  }\n\n  var currentClassPart = classParts[0];\n  var nextClassPartObject = classPartObject.nextPart[currentClassPart];\n  var classGroupFromNextClassPart = nextClassPartObject ? getGroupRecursive(classParts.slice(1), nextClassPartObject) : undefined;\n\n  if (classGroupFromNextClassPart) {\n    return classGroupFromNextClassPart;\n  }\n\n  if (classPartObject.validators.length === 0) {\n    return undefined;\n  }\n\n  var classRest = classParts.join(CLASS_PART_SEPARATOR);\n  return (_classPartObject$vali = classPartObject.validators.find(function (_ref) {\n    var validator = _ref.validator;\n    return validator(classRest);\n  })) == null ? void 0 : _classPartObject$vali.classGroupId;\n}\n\nvar arbitraryPropertyRegex = /^\\[(.+)\\]$/;\n\nfunction getGroupIdForArbitraryProperty(className) {\n  if (arbitraryPropertyRegex.test(className)) {\n    var arbitraryPropertyClassName = arbitraryPropertyRegex.exec(className)[1];\n    var property = arbitraryPropertyClassName == null ? void 0 : arbitraryPropertyClassName.substring(0, arbitraryPropertyClassName.indexOf(':'));\n\n    if (property) {\n      // I use two dots here because one dot is used as prefix for class groups in plugins\n      return 'arbitrary..' + property;\n    }\n  }\n}\n/**\r\n * Exported for testing only\r\n */\n\n\nfunction createClassMap(config) {\n  var theme = config.theme,\n      prefix = config.prefix;\n  var classMap = {\n    nextPart: {},\n    validators: []\n  };\n  var prefixedClassGroupEntries = getPrefixedClassGroupEntries(Object.entries(config.classGroups), prefix);\n  prefixedClassGroupEntries.forEach(function (_ref2) {\n    var classGroupId = _ref2[0],\n        classGroup = _ref2[1];\n    processClassesRecursively(classGroup, classMap, classGroupId, theme);\n  });\n  return classMap;\n}\n\nfunction processClassesRecursively(classGroup, classPartObject, classGroupId, theme) {\n  classGroup.forEach(function (classDefinition) {\n    if (typeof classDefinition === 'string') {\n      var classPartObjectToEdit = classDefinition === '' ? classPartObject : getPart(classPartObject, classDefinition);\n      classPartObjectToEdit.classGroupId = classGroupId;\n      return;\n    }\n\n    if (typeof classDefinition === 'function') {\n      if (isThemeGetter(classDefinition)) {\n        processClassesRecursively(classDefinition(theme), classPartObject, classGroupId, theme);\n        return;\n      }\n\n      classPartObject.validators.push({\n        validator: classDefinition,\n        classGroupId: classGroupId\n      });\n      return;\n    }\n\n    Object.entries(classDefinition).forEach(function (_ref3) {\n      var key = _ref3[0],\n          classGroup = _ref3[1];\n      processClassesRecursively(classGroup, getPart(classPartObject, key), classGroupId, theme);\n    });\n  });\n}\n\nfunction getPart(classPartObject, path) {\n  var currentClassPartObject = classPartObject;\n  path.split(CLASS_PART_SEPARATOR).forEach(function (pathPart) {\n    if (currentClassPartObject.nextPart[pathPart] === undefined) {\n      currentClassPartObject.nextPart[pathPart] = {\n        nextPart: {},\n        validators: []\n      };\n    }\n\n    currentClassPartObject = currentClassPartObject.nextPart[pathPart];\n  });\n  return currentClassPartObject;\n}\n\nfunction isThemeGetter(func) {\n  return func.isThemeGetter;\n}\n\nfunction getPrefixedClassGroupEntries(classGroupEntries, prefix) {\n  if (!prefix) {\n    return classGroupEntries;\n  }\n\n  return classGroupEntries.map(function (_ref4) {\n    var classGroupId = _ref4[0],\n        classGroup = _ref4[1];\n    var prefixedClassGroup = classGroup.map(function (classDefinition) {\n      if (typeof classDefinition === 'string') {\n        return prefix + classDefinition;\n      }\n\n      if (typeof classDefinition === 'object') {\n        return Object.fromEntries(Object.entries(classDefinition).map(function (_ref5) {\n          var key = _ref5[0],\n              value = _ref5[1];\n          return [prefix + key, value];\n        }));\n      }\n\n      return classDefinition;\n    });\n    return [classGroupId, prefixedClassGroup];\n  });\n}\n\nfunction createConfigUtils(config) {\n  return _extends({\n    cache: getLruCache(config.cacheSize)\n  }, createClassUtils(config));\n}\n\nvar SPLIT_CLASSES_REGEX = /\\s+/;\nvar IMPORTANT_MODIFIER = '!'; // Regex is needed so we don't match against colons in labels for arbitrary values like `text-[color:var(--mystery-var)]`\n// I'd prefer to use a negative lookbehind for all supported labels, but lookbheinds don't have good browser support yet. More info: https://caniuse.com/js-regexp-lookbehind\n\nvar MODIFIER_SEPARATOR_REGEX = /:(?![^[]*\\])/;\nvar MODIFIER_SEPARATOR = ':';\n\nfunction mergeClassList(classList, configUtils) {\n  var getClassGroupId = configUtils.getClassGroupId,\n      getConflictingClassGroupIds = configUtils.getConflictingClassGroupIds;\n  /**\r\n   * Set of classGroupIds in following format:\r\n   * `{importantModifier}{variantModifiers}{classGroupId}`\r\n   * @example 'float'\r\n   * @example 'hover:focus:bg-color'\r\n   * @example '!md:pr'\r\n   */\n\n  var classGroupsInConflict = new Set();\n  return classList.trim().split(SPLIT_CLASSES_REGEX).map(function (originalClassName) {\n    var modifiers = originalClassName.split(MODIFIER_SEPARATOR_REGEX);\n    var classNameWithImportantModifier = modifiers.pop();\n    var hasImportantModifier = classNameWithImportantModifier.startsWith(IMPORTANT_MODIFIER);\n    var className = hasImportantModifier ? classNameWithImportantModifier.substring(1) : classNameWithImportantModifier;\n    var classGroupId = getClassGroupId(className);\n\n    if (!classGroupId) {\n      return {\n        isTailwindClass: false,\n        originalClassName: originalClassName\n      };\n    }\n\n    var variantModifier = modifiers.length === 0 ? '' : modifiers.sort().concat('').join(MODIFIER_SEPARATOR);\n    var fullModifier = hasImportantModifier ? IMPORTANT_MODIFIER + variantModifier : variantModifier;\n    return {\n      isTailwindClass: true,\n      modifier: fullModifier,\n      classGroupId: classGroupId,\n      originalClassName: originalClassName\n    };\n  }).reverse() // Last class in conflict wins, so we need to filter conflicting classes in reverse order.\n  .filter(function (parsed) {\n    if (!parsed.isTailwindClass) {\n      return true;\n    }\n\n    var modifier = parsed.modifier,\n        classGroupId = parsed.classGroupId;\n    var classId = modifier + \":\" + classGroupId;\n\n    if (classGroupsInConflict.has(classId)) {\n      return false;\n    }\n\n    classGroupsInConflict.add(classId);\n    getConflictingClassGroupIds(classGroupId).forEach(function (group) {\n      return classGroupsInConflict.add(modifier + \":\" + group);\n    });\n    return true;\n  }).reverse().map(function (parsed) {\n    return parsed.originalClassName;\n  }).join(' ');\n}\n\nfunction createTailwindMerge() {\n  for (var _len = arguments.length, createConfig = new Array(_len), _key = 0; _key < _len; _key++) {\n    createConfig[_key] = arguments[_key];\n  }\n\n  var configUtils;\n  var cacheGet;\n  var cacheSet;\n  var functionToCall = initTailwindMerge;\n\n  function initTailwindMerge(classList) {\n    var firstCreateConfig = createConfig[0],\n        restCreateConfig = createConfig.slice(1);\n    var config = restCreateConfig.reduce(function (previousConfig, createConfigCurrent) {\n      return createConfigCurrent(previousConfig);\n    }, firstCreateConfig());\n    configUtils = createConfigUtils(config);\n    cacheGet = configUtils.cache.get;\n    cacheSet = configUtils.cache.set;\n    functionToCall = tailwindMerge;\n    return tailwindMerge(classList);\n  }\n\n  function tailwindMerge(classList) {\n    var cachedResult = cacheGet(classList);\n\n    if (cachedResult) {\n      return cachedResult;\n    }\n\n    var result = mergeClassList(classList, configUtils);\n    cacheSet(classList, result);\n    return result;\n  }\n\n  return function callTailwindMerge() {\n    var classList = '';\n    var temp; // Credits → https://github.com/lukeed/clsx/blob/v1.1.1/src/index.js\n\n    for (var index = 0; index < arguments.length; index += 1) {\n      if (temp = arguments[index]) {\n        classList && (classList += ' ');\n        classList += temp;\n      }\n    }\n\n    return functionToCall(classList);\n  };\n}\n\nfunction fromTheme(key) {\n  var themeGetter = function themeGetter(theme) {\n    return theme[key] || [];\n  };\n\n  themeGetter.isThemeGetter = true;\n  return themeGetter;\n}\n\nvar arbitraryValueRegex = /^\\[(.+)\\]$/;\nvar fractionRegex = /^\\d+\\/\\d+$/;\nvar stringLengths = /*#__PURE__*/new Set(['px', 'full', 'screen']);\nvar tshirtUnitRegex = /^(\\d+)?(xs|sm|md|lg|xl)$/;\nvar lengthUnitRegex = /\\d+(%|px|em|rem|vh|vw|pt|pc|in|cm|mm|cap|ch|ex|lh|rlh|vi|vb|vmin|vmax)/; // Shadow always begins with x and y offset separated by underscore\n\nvar shadowRegex = /^-?((\\d+)?\\.?(\\d+)[a-z]+|0)_-?((\\d+)?\\.?(\\d+)[a-z]+|0)/;\n\nfunction isLength(classPart) {\n  return !Number.isNaN(Number(classPart)) || stringLengths.has(classPart) || fractionRegex.test(classPart) || isArbitraryLength(classPart);\n}\n\nfunction isArbitraryLength(classPart) {\n  var _arbitraryValueRegex$;\n\n  var arbitraryValue = (_arbitraryValueRegex$ = arbitraryValueRegex.exec(classPart)) == null ? void 0 : _arbitraryValueRegex$[1];\n\n  if (arbitraryValue) {\n    return arbitraryValue.startsWith('length:') || lengthUnitRegex.test(arbitraryValue);\n  }\n\n  return false;\n}\n\nfunction isArbitrarySize(classPart) {\n  var _arbitraryValueRegex$2;\n\n  var arbitraryValue = (_arbitraryValueRegex$2 = arbitraryValueRegex.exec(classPart)) == null ? void 0 : _arbitraryValueRegex$2[1];\n  return arbitraryValue ? arbitraryValue.startsWith('size:') : false;\n}\n\nfunction isArbitraryPosition(classPart) {\n  var _arbitraryValueRegex$3;\n\n  var arbitraryValue = (_arbitraryValueRegex$3 = arbitraryValueRegex.exec(classPart)) == null ? void 0 : _arbitraryValueRegex$3[1];\n  return arbitraryValue ? arbitraryValue.startsWith('position:') : false;\n}\n\nfunction isArbitraryUrl(classPart) {\n  var _arbitraryValueRegex$4;\n\n  var arbitraryValue = (_arbitraryValueRegex$4 = arbitraryValueRegex.exec(classPart)) == null ? void 0 : _arbitraryValueRegex$4[1];\n  return arbitraryValue ? arbitraryValue.startsWith('url(') || arbitraryValue.startsWith('url:') : false;\n}\n\nfunction isArbitraryWeight(classPart) {\n  var _arbitraryValueRegex$5;\n\n  var arbitraryValue = (_arbitraryValueRegex$5 = arbitraryValueRegex.exec(classPart)) == null ? void 0 : _arbitraryValueRegex$5[1];\n  return arbitraryValue ? !Number.isNaN(Number(arbitraryValue)) || arbitraryValue.startsWith('number:') : false;\n}\n\nfunction isInteger(classPart) {\n  var _arbitraryValueRegex$6;\n\n  var arbitraryValue = (_arbitraryValueRegex$6 = arbitraryValueRegex.exec(classPart)) == null ? void 0 : _arbitraryValueRegex$6[1];\n\n  if (arbitraryValue) {\n    return Number.isInteger(Number(arbitraryValue));\n  }\n\n  return Number.isInteger(Number(classPart));\n}\n\nfunction isArbitraryValue(classPart) {\n  return arbitraryValueRegex.test(classPart);\n}\n\nfunction isAny() {\n  return true;\n}\n\nfunction isTshirtSize(classPart) {\n  return tshirtUnitRegex.test(classPart);\n}\n\nfunction isArbitraryShadow(classPart) {\n  var _arbitraryValueRegex$7;\n\n  var arbitraryValue = (_arbitraryValueRegex$7 = arbitraryValueRegex.exec(classPart)) == null ? void 0 : _arbitraryValueRegex$7[1];\n\n  if (arbitraryValue) {\n    return shadowRegex.test(arbitraryValue);\n  }\n\n  return false;\n}\n\nvar validators = {\n  __proto__: null,\n  isLength: isLength,\n  isArbitraryLength: isArbitraryLength,\n  isArbitrarySize: isArbitrarySize,\n  isArbitraryPosition: isArbitraryPosition,\n  isArbitraryUrl: isArbitraryUrl,\n  isArbitraryWeight: isArbitraryWeight,\n  isInteger: isInteger,\n  isArbitraryValue: isArbitraryValue,\n  isAny: isAny,\n  isTshirtSize: isTshirtSize,\n  isArbitraryShadow: isArbitraryShadow\n};\n\nfunction getDefaultConfig() {\n  var colors = fromTheme('colors');\n  var spacing = fromTheme('spacing');\n  var blur = fromTheme('blur');\n  var brightness = fromTheme('brightness');\n  var borderColor = fromTheme('borderColor');\n  var borderRadius = fromTheme('borderRadius');\n  var borderWidth = fromTheme('borderWidth');\n  var contrast = fromTheme('contrast');\n  var grayscale = fromTheme('grayscale');\n  var hueRotate = fromTheme('hueRotate');\n  var invert = fromTheme('invert');\n  var gap = fromTheme('gap');\n  var gradientColorStops = fromTheme('gradientColorStops');\n  var inset = fromTheme('inset');\n  var margin = fromTheme('margin');\n  var opacity = fromTheme('opacity');\n  var padding = fromTheme('padding');\n  var saturate = fromTheme('saturate');\n  var scale = fromTheme('scale');\n  var sepia = fromTheme('sepia');\n  var skew = fromTheme('skew');\n  var space = fromTheme('space');\n  var translate = fromTheme('translate');\n\n  var getOverscroll = function getOverscroll() {\n    return ['auto', 'contain', 'none'];\n  };\n\n  var getOverflow = function getOverflow() {\n    return ['auto', 'hidden', 'clip', 'visible', 'scroll'];\n  };\n\n  var getSpacingWithAuto = function getSpacingWithAuto() {\n    return ['auto', spacing];\n  };\n\n  var getLengthWithEmpty = function getLengthWithEmpty() {\n    return ['', isLength];\n  };\n\n  var getIntegerWithAuto = function getIntegerWithAuto() {\n    return ['auto', isInteger];\n  };\n\n  var getPositions = function getPositions() {\n    return ['bottom', 'center', 'left', 'left-bottom', 'left-top', 'right', 'right-bottom', 'right-top', 'top'];\n  };\n\n  var getLineStyles = function getLineStyles() {\n    return ['solid', 'dashed', 'dotted', 'double', 'none'];\n  };\n\n  var getBlendModes = function getBlendModes() {\n    return ['normal', 'multiply', 'screen', 'overlay', 'darken', 'lighten', 'color-dodge', 'color-burn', 'hard-light', 'soft-light', 'difference', 'exclusion', 'hue', 'saturation', 'color', 'luminosity'];\n  };\n\n  var getAlign = function getAlign() {\n    return ['start', 'end', 'center', 'between', 'around', 'evenly'];\n  };\n\n  var getZeroAndEmpty = function getZeroAndEmpty() {\n    return ['', '0', isArbitraryValue];\n  };\n\n  var getBreaks = function getBreaks() {\n    return ['auto', 'avoid', 'all', 'avoid-page', 'page', 'left', 'right', 'column'];\n  };\n\n  return {\n    cacheSize: 500,\n    theme: {\n      colors: [isAny],\n      spacing: [isLength],\n      blur: ['none', '', isTshirtSize, isArbitraryLength],\n      brightness: [isInteger],\n      borderColor: [colors],\n      borderRadius: ['none', '', 'full', isTshirtSize, isArbitraryLength],\n      borderWidth: getLengthWithEmpty(),\n      contrast: [isInteger],\n      grayscale: getZeroAndEmpty(),\n      hueRotate: [isInteger],\n      invert: getZeroAndEmpty(),\n      gap: [spacing],\n      gradientColorStops: [colors],\n      inset: getSpacingWithAuto(),\n      margin: getSpacingWithAuto(),\n      opacity: [isInteger],\n      padding: [spacing],\n      saturate: [isInteger],\n      scale: [isInteger],\n      sepia: getZeroAndEmpty(),\n      skew: [isInteger, isArbitraryValue],\n      space: [spacing],\n      translate: [spacing]\n    },\n    classGroups: {\n      // Layout\n\n      /**\r\n       * Aspect Ratio\r\n       * @see https://tailwindcss.com/docs/aspect-ratio\r\n       */\n      aspect: [{\n        aspect: ['auto', 'square', 'video', isArbitraryValue]\n      }],\n\n      /**\r\n       * Container\r\n       * @see https://tailwindcss.com/docs/container\r\n       */\n      container: ['container'],\n\n      /**\r\n       * Columns\r\n       * @see https://tailwindcss.com/docs/columns\r\n       */\n      columns: [{\n        columns: [isTshirtSize]\n      }],\n\n      /**\r\n       * Break After\r\n       * @see https://tailwindcss.com/docs/break-after\r\n       */\n      'break-after': [{\n        'break-after': getBreaks()\n      }],\n\n      /**\r\n       * Break Before\r\n       * @see https://tailwindcss.com/docs/break-before\r\n       */\n      'break-before': [{\n        'break-before': getBreaks()\n      }],\n\n      /**\r\n       * Break Inside\r\n       * @see https://tailwindcss.com/docs/break-inside\r\n       */\n      'break-inside': [{\n        'break-inside': ['auto', 'avoid', 'avoid-page', 'avoid-column']\n      }],\n\n      /**\r\n       * Box Decoration Break\r\n       * @see https://tailwindcss.com/docs/box-decoration-break\r\n       */\n      'box-decoration': [{\n        'box-decoration': ['slice', 'clone']\n      }],\n\n      /**\r\n       * Box Sizing\r\n       * @see https://tailwindcss.com/docs/box-sizing\r\n       */\n      box: [{\n        box: ['border', 'content']\n      }],\n\n      /**\r\n       * Display\r\n       * @see https://tailwindcss.com/docs/display\r\n       */\n      display: ['block', 'inline-block', 'inline', 'flex', 'inline-flex', 'table', 'inline-table', 'table-caption', 'table-cell', 'table-column', 'table-column-group', 'table-footer-group', 'table-header-group', 'table-row-group', 'table-row', 'flow-root', 'grid', 'inline-grid', 'contents', 'list-item', 'hidden'],\n\n      /**\r\n       * Floats\r\n       * @see https://tailwindcss.com/docs/float\r\n       */\n      \"float\": [{\n        \"float\": ['right', 'left', 'none']\n      }],\n\n      /**\r\n       * Clear\r\n       * @see https://tailwindcss.com/docs/clear\r\n       */\n      clear: [{\n        clear: ['left', 'right', 'both', 'none']\n      }],\n\n      /**\r\n       * Isolation\r\n       * @see https://tailwindcss.com/docs/isolation\r\n       */\n      isolation: ['isolate', 'isolation-auto'],\n\n      /**\r\n       * Object Fit\r\n       * @see https://tailwindcss.com/docs/object-fit\r\n       */\n      'object-fit': [{\n        object: ['contain', 'cover', 'fill', 'none', 'scale-down']\n      }],\n\n      /**\r\n       * Object Position\r\n       * @see https://tailwindcss.com/docs/object-position\r\n       */\n      'object-position': [{\n        object: [].concat(getPositions(), [isArbitraryValue])\n      }],\n\n      /**\r\n       * Overflow\r\n       * @see https://tailwindcss.com/docs/overflow\r\n       */\n      overflow: [{\n        overflow: getOverflow()\n      }],\n\n      /**\r\n       * Overflow X\r\n       * @see https://tailwindcss.com/docs/overflow\r\n       */\n      'overflow-x': [{\n        'overflow-x': getOverflow()\n      }],\n\n      /**\r\n       * Overflow Y\r\n       * @see https://tailwindcss.com/docs/overflow\r\n       */\n      'overflow-y': [{\n        'overflow-y': getOverflow()\n      }],\n\n      /**\r\n       * Overscroll Behavior\r\n       * @see https://tailwindcss.com/docs/overscroll-behavior\r\n       */\n      overscroll: [{\n        overscroll: getOverscroll()\n      }],\n\n      /**\r\n       * Overscroll Behavior X\r\n       * @see https://tailwindcss.com/docs/overscroll-behavior\r\n       */\n      'overscroll-x': [{\n        'overscroll-x': getOverscroll()\n      }],\n\n      /**\r\n       * Overscroll Behavior Y\r\n       * @see https://tailwindcss.com/docs/overscroll-behavior\r\n       */\n      'overscroll-y': [{\n        'overscroll-y': getOverscroll()\n      }],\n\n      /**\r\n       * Position\r\n       * @see https://tailwindcss.com/docs/position\r\n       */\n      position: ['static', 'fixed', 'absolute', 'relative', 'sticky'],\n\n      /**\r\n       * Top / Right / Bottom / Left\r\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\r\n       */\n      inset: [{\n        inset: [inset]\n      }],\n\n      /**\r\n       * Right / Left\r\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\r\n       */\n      'inset-x': [{\n        'inset-x': [inset]\n      }],\n\n      /**\r\n       * Top / Bottom\r\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\r\n       */\n      'inset-y': [{\n        'inset-y': [inset]\n      }],\n\n      /**\r\n       * Top\r\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\r\n       */\n      top: [{\n        top: [inset]\n      }],\n\n      /**\r\n       * Right\r\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\r\n       */\n      right: [{\n        right: [inset]\n      }],\n\n      /**\r\n       * Bottom\r\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\r\n       */\n      bottom: [{\n        bottom: [inset]\n      }],\n\n      /**\r\n       * Left\r\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\r\n       */\n      left: [{\n        left: [inset]\n      }],\n\n      /**\r\n       * Visibility\r\n       * @see https://tailwindcss.com/docs/visibility\r\n       */\n      visibility: ['visible', 'invisible'],\n\n      /**\r\n       * Z-Index\r\n       * @see https://tailwindcss.com/docs/z-index\r\n       */\n      z: [{\n        z: [isLength]\n      }],\n      // Flexbox and Grid\n\n      /**\r\n       * Flex Basis\r\n       * @see https://tailwindcss.com/docs/flex-basis\r\n       */\n      basis: [{\n        basis: [spacing]\n      }],\n\n      /**\r\n       * Flex Direction\r\n       * @see https://tailwindcss.com/docs/flex-direction\r\n       */\n      'flex-direction': [{\n        flex: ['row', 'row-reverse', 'col', 'col-reverse']\n      }],\n\n      /**\r\n       * Flex Wrap\r\n       * @see https://tailwindcss.com/docs/flex-wrap\r\n       */\n      'flex-wrap': [{\n        flex: ['wrap', 'wrap-reverse', 'nowrap']\n      }],\n\n      /**\r\n       * Flex\r\n       * @see https://tailwindcss.com/docs/flex\r\n       */\n      flex: [{\n        flex: ['1', 'auto', 'initial', 'none', isArbitraryValue]\n      }],\n\n      /**\r\n       * Flex Grow\r\n       * @see https://tailwindcss.com/docs/flex-grow\r\n       */\n      grow: [{\n        grow: getZeroAndEmpty()\n      }],\n\n      /**\r\n       * Flex Shrink\r\n       * @see https://tailwindcss.com/docs/flex-shrink\r\n       */\n      shrink: [{\n        shrink: getZeroAndEmpty()\n      }],\n\n      /**\r\n       * Order\r\n       * @see https://tailwindcss.com/docs/order\r\n       */\n      order: [{\n        order: ['first', 'last', 'none', isInteger]\n      }],\n\n      /**\r\n       * Grid Template Columns\r\n       * @see https://tailwindcss.com/docs/grid-template-columns\r\n       */\n      'grid-cols': [{\n        'grid-cols': [isAny]\n      }],\n\n      /**\r\n       * Grid Column Start / End\r\n       * @see https://tailwindcss.com/docs/grid-column\r\n       */\n      'col-start-end': [{\n        col: ['auto', {\n          span: [isInteger]\n        }]\n      }],\n\n      /**\r\n       * Grid Column Start\r\n       * @see https://tailwindcss.com/docs/grid-column\r\n       */\n      'col-start': [{\n        'col-start': getIntegerWithAuto()\n      }],\n\n      /**\r\n       * Grid Column End\r\n       * @see https://tailwindcss.com/docs/grid-column\r\n       */\n      'col-end': [{\n        'col-end': getIntegerWithAuto()\n      }],\n\n      /**\r\n       * Grid Template Rows\r\n       * @see https://tailwindcss.com/docs/grid-template-rows\r\n       */\n      'grid-rows': [{\n        'grid-rows': [isAny]\n      }],\n\n      /**\r\n       * Grid Row Start / End\r\n       * @see https://tailwindcss.com/docs/grid-row\r\n       */\n      'row-start-end': [{\n        row: ['auto', {\n          span: [isInteger]\n        }]\n      }],\n\n      /**\r\n       * Grid Row Start\r\n       * @see https://tailwindcss.com/docs/grid-row\r\n       */\n      'row-start': [{\n        'row-start': getIntegerWithAuto()\n      }],\n\n      /**\r\n       * Grid Row End\r\n       * @see https://tailwindcss.com/docs/grid-row\r\n       */\n      'row-end': [{\n        'row-end': getIntegerWithAuto()\n      }],\n\n      /**\r\n       * Grid Auto Flow\r\n       * @see https://tailwindcss.com/docs/grid-auto-flow\r\n       */\n      'grid-flow': [{\n        'grid-flow': ['row', 'col', 'row-dense', 'col-dense']\n      }],\n\n      /**\r\n       * Grid Auto Columns\r\n       * @see https://tailwindcss.com/docs/grid-auto-columns\r\n       */\n      'auto-cols': [{\n        'auto-cols': ['auto', 'min', 'max', 'fr', isArbitraryValue]\n      }],\n\n      /**\r\n       * Grid Auto Rows\r\n       * @see https://tailwindcss.com/docs/grid-auto-rows\r\n       */\n      'auto-rows': [{\n        'auto-rows': ['auto', 'min', 'max', 'fr', isArbitraryValue]\n      }],\n\n      /**\r\n       * Gap\r\n       * @see https://tailwindcss.com/docs/gap\r\n       */\n      gap: [{\n        gap: [gap]\n      }],\n\n      /**\r\n       * Gap X\r\n       * @see https://tailwindcss.com/docs/gap\r\n       */\n      'gap-x': [{\n        'gap-x': [gap]\n      }],\n\n      /**\r\n       * Gap Y\r\n       * @see https://tailwindcss.com/docs/gap\r\n       */\n      'gap-y': [{\n        'gap-y': [gap]\n      }],\n\n      /**\r\n       * Justify Content\r\n       * @see https://tailwindcss.com/docs/justify-content\r\n       */\n      'justify-content': [{\n        justify: getAlign()\n      }],\n\n      /**\r\n       * Justify Items\r\n       * @see https://tailwindcss.com/docs/justify-items\r\n       */\n      'justify-items': [{\n        'justify-items': ['start', 'end', 'center', 'stretch']\n      }],\n\n      /**\r\n       * Justify Self\r\n       * @see https://tailwindcss.com/docs/justify-self\r\n       */\n      'justify-self': [{\n        'justify-self': ['auto', 'start', 'end', 'center', 'stretch']\n      }],\n\n      /**\r\n       * Align Content\r\n       * @see https://tailwindcss.com/docs/align-content\r\n       */\n      'align-content': [{\n        content: getAlign()\n      }],\n\n      /**\r\n       * Align Items\r\n       * @see https://tailwindcss.com/docs/align-items\r\n       */\n      'align-items': [{\n        items: ['start', 'end', 'center', 'baseline', 'stretch']\n      }],\n\n      /**\r\n       * Align Self\r\n       * @see https://tailwindcss.com/docs/align-self\r\n       */\n      'align-self': [{\n        self: ['auto', 'start', 'end', 'center', 'stretch', 'baseline']\n      }],\n\n      /**\r\n       * Place Content\r\n       * @see https://tailwindcss.com/docs/place-content\r\n       */\n      'place-content': [{\n        'place-content': [].concat(getAlign(), ['stretch'])\n      }],\n\n      /**\r\n       * Place Items\r\n       * @see https://tailwindcss.com/docs/place-items\r\n       */\n      'place-items': [{\n        'place-items': ['start', 'end', 'center', 'stretch']\n      }],\n\n      /**\r\n       * Place Self\r\n       * @see https://tailwindcss.com/docs/place-self\r\n       */\n      'place-self': [{\n        'place-self': ['auto', 'start', 'end', 'center', 'stretch']\n      }],\n      // Spacing\n\n      /**\r\n       * Padding\r\n       * @see https://tailwindcss.com/docs/padding\r\n       */\n      p: [{\n        p: [padding]\n      }],\n\n      /**\r\n       * Padding X\r\n       * @see https://tailwindcss.com/docs/padding\r\n       */\n      px: [{\n        px: [padding]\n      }],\n\n      /**\r\n       * Padding Y\r\n       * @see https://tailwindcss.com/docs/padding\r\n       */\n      py: [{\n        py: [padding]\n      }],\n\n      /**\r\n       * Padding Top\r\n       * @see https://tailwindcss.com/docs/padding\r\n       */\n      pt: [{\n        pt: [padding]\n      }],\n\n      /**\r\n       * Padding Right\r\n       * @see https://tailwindcss.com/docs/padding\r\n       */\n      pr: [{\n        pr: [padding]\n      }],\n\n      /**\r\n       * Padding Bottom\r\n       * @see https://tailwindcss.com/docs/padding\r\n       */\n      pb: [{\n        pb: [padding]\n      }],\n\n      /**\r\n       * Padding Left\r\n       * @see https://tailwindcss.com/docs/padding\r\n       */\n      pl: [{\n        pl: [padding]\n      }],\n\n      /**\r\n       * Margin\r\n       * @see https://tailwindcss.com/docs/margin\r\n       */\n      m: [{\n        m: [margin]\n      }],\n\n      /**\r\n       * Margin X\r\n       * @see https://tailwindcss.com/docs/margin\r\n       */\n      mx: [{\n        mx: [margin]\n      }],\n\n      /**\r\n       * Margin Y\r\n       * @see https://tailwindcss.com/docs/margin\r\n       */\n      my: [{\n        my: [margin]\n      }],\n\n      /**\r\n       * Margin Top\r\n       * @see https://tailwindcss.com/docs/margin\r\n       */\n      mt: [{\n        mt: [margin]\n      }],\n\n      /**\r\n       * Margin Right\r\n       * @see https://tailwindcss.com/docs/margin\r\n       */\n      mr: [{\n        mr: [margin]\n      }],\n\n      /**\r\n       * Margin Bottom\r\n       * @see https://tailwindcss.com/docs/margin\r\n       */\n      mb: [{\n        mb: [margin]\n      }],\n\n      /**\r\n       * Margin Left\r\n       * @see https://tailwindcss.com/docs/margin\r\n       */\n      ml: [{\n        ml: [margin]\n      }],\n\n      /**\r\n       * Space Between X\r\n       * @see https://tailwindcss.com/docs/space\r\n       */\n      'space-x': [{\n        'space-x': [space]\n      }],\n\n      /**\r\n       * Space Between X Reverse\r\n       * @see https://tailwindcss.com/docs/space\r\n       */\n      'space-x-reverse': ['space-x-reverse'],\n\n      /**\r\n       * Space Between Y\r\n       * @see https://tailwindcss.com/docs/space\r\n       */\n      'space-y': [{\n        'space-y': [space]\n      }],\n\n      /**\r\n       * Space Between Y Reverse\r\n       * @see https://tailwindcss.com/docs/space\r\n       */\n      'space-y-reverse': ['space-y-reverse'],\n      // Sizing\n\n      /**\r\n       * Width\r\n       * @see https://tailwindcss.com/docs/width\r\n       */\n      w: [{\n        w: ['auto', 'min', 'max', spacing]\n      }],\n\n      /**\r\n       * Min-Width\r\n       * @see https://tailwindcss.com/docs/min-width\r\n       */\n      'min-w': [{\n        'min-w': ['min', 'max', 'fit', isLength]\n      }],\n\n      /**\r\n       * Max-Width\r\n       * @see https://tailwindcss.com/docs/max-width\r\n       */\n      'max-w': [{\n        'max-w': ['0', 'none', 'full', 'min', 'max', 'fit', 'prose', {\n          screen: [isTshirtSize]\n        }, isTshirtSize, isArbitraryLength]\n      }],\n\n      /**\r\n       * Height\r\n       * @see https://tailwindcss.com/docs/height\r\n       */\n      h: [{\n        h: getSpacingWithAuto()\n      }],\n\n      /**\r\n       * Min-Height\r\n       * @see https://tailwindcss.com/docs/min-height\r\n       */\n      'min-h': [{\n        'min-h': ['min', 'max', 'fit', isLength]\n      }],\n\n      /**\r\n       * Max-Height\r\n       * @see https://tailwindcss.com/docs/max-height\r\n       */\n      'max-h': [{\n        'max-h': [spacing, 'min', 'max', 'fit']\n      }],\n      // Typography\n\n      /**\r\n       * Font Size\r\n       * @see https://tailwindcss.com/docs/font-size\r\n       */\n      'font-size': [{\n        text: ['base', isTshirtSize, isArbitraryLength]\n      }],\n\n      /**\r\n       * Font Smoothing\r\n       * @see https://tailwindcss.com/docs/font-smoothing\r\n       */\n      'font-smoothing': ['antialiased', 'subpixel-antialiased'],\n\n      /**\r\n       * Font Style\r\n       * @see https://tailwindcss.com/docs/font-style\r\n       */\n      'font-style': ['italic', 'not-italic'],\n\n      /**\r\n       * Font Weight\r\n       * @see https://tailwindcss.com/docs/font-weight\r\n       */\n      'font-weight': [{\n        font: ['thin', 'extralight', 'light', 'normal', 'medium', 'semibold', 'bold', 'extrabold', 'black', isArbitraryWeight]\n      }],\n\n      /**\r\n       * Font Family\r\n       * @see https://tailwindcss.com/docs/font-family\r\n       */\n      'font-family': [{\n        font: [isAny]\n      }],\n\n      /**\r\n       * Font Variant Numeric\r\n       * @see https://tailwindcss.com/docs/font-variant-numeric\r\n       */\n      'fvn-normal': ['normal-nums'],\n\n      /**\r\n       * Font Variant Numeric\r\n       * @see https://tailwindcss.com/docs/font-variant-numeric\r\n       */\n      'fvn-ordinal': ['ordinal'],\n\n      /**\r\n       * Font Variant Numeric\r\n       * @see https://tailwindcss.com/docs/font-variant-numeric\r\n       */\n      'fvn-slashed-zero': ['slashed-zero'],\n\n      /**\r\n       * Font Variant Numeric\r\n       * @see https://tailwindcss.com/docs/font-variant-numeric\r\n       */\n      'fvn-figure': ['lining-nums', 'oldstyle-nums'],\n\n      /**\r\n       * Font Variant Numeric\r\n       * @see https://tailwindcss.com/docs/font-variant-numeric\r\n       */\n      'fvn-spacing': ['proportional-nums', 'tabular-nums'],\n\n      /**\r\n       * Font Variant Numeric\r\n       * @see https://tailwindcss.com/docs/font-variant-numeric\r\n       */\n      'fvn-fraction': ['diagonal-fractions', 'stacked-fractons'],\n\n      /**\r\n       * Letter Spacing\r\n       * @see https://tailwindcss.com/docs/letter-spacing\r\n       */\n      tracking: [{\n        tracking: ['tighter', 'tight', 'normal', 'wide', 'wider', 'widest', isArbitraryLength]\n      }],\n\n      /**\r\n       * Line Height\r\n       * @see https://tailwindcss.com/docs/line-height\r\n       */\n      leading: [{\n        leading: ['none', 'tight', 'snug', 'normal', 'relaxed', 'loose', isLength]\n      }],\n\n      /**\r\n       * List Style Type\r\n       * @see https://tailwindcss.com/docs/list-style-type\r\n       */\n      'list-style-type': [{\n        list: ['none', 'disc', 'decimal', isArbitraryValue]\n      }],\n\n      /**\r\n       * List Style Position\r\n       * @see https://tailwindcss.com/docs/list-style-position\r\n       */\n      'list-style-position': [{\n        list: ['inside', 'outside']\n      }],\n\n      /**\r\n       * Placeholder Color\r\n       * @deprecated since Tailwind CSS v3.0.0\r\n       * @see https://tailwindcss.com/docs/placeholder-color\r\n       */\n      'placeholder-color': [{\n        placeholder: [colors]\n      }],\n\n      /**\r\n       * Placeholder Opacity\r\n       * @see https://tailwindcss.com/docs/placeholder-opacity\r\n       */\n      'placeholder-opacity': [{\n        'placeholder-opacity': [opacity]\n      }],\n\n      /**\r\n       * Text Alignment\r\n       * @see https://tailwindcss.com/docs/text-align\r\n       */\n      'text-alignment': [{\n        text: ['left', 'center', 'right', 'justify']\n      }],\n\n      /**\r\n       * Text Color\r\n       * @see https://tailwindcss.com/docs/text-color\r\n       */\n      'text-color': [{\n        text: [colors]\n      }],\n\n      /**\r\n       * Text Opacity\r\n       * @see https://tailwindcss.com/docs/text-opacity\r\n       */\n      'text-opacity': [{\n        'text-opacity': [opacity]\n      }],\n\n      /**\r\n       * Text Decoration\r\n       * @see https://tailwindcss.com/docs/text-decoration\r\n       */\n      'text-decoration': ['underline', 'overline', 'line-through', 'no-underline'],\n\n      /**\r\n       * Text Decoration Style\r\n       * @see https://tailwindcss.com/docs/text-decoration-style\r\n       */\n      'text-decoration-style': [{\n        decoration: [].concat(getLineStyles(), ['wavy'])\n      }],\n\n      /**\r\n       * Text Decoration Thickness\r\n       * @see https://tailwindcss.com/docs/text-decoration-thickness\r\n       */\n      'text-decoration-thickness': [{\n        decoration: ['auto', 'from-font', isLength]\n      }],\n\n      /**\r\n       * Text Underline Offset\r\n       * @see https://tailwindcss.com/docs/text-underline-offset\r\n       */\n      'underline-offset': [{\n        'underline-offset': ['auto', isLength]\n      }],\n\n      /**\r\n       * Text Decoration Color\r\n       * @see https://tailwindcss.com/docs/text-decoration-color\r\n       */\n      'text-decoration-color': [{\n        decoration: [colors]\n      }],\n\n      /**\r\n       * Text Transform\r\n       * @see https://tailwindcss.com/docs/text-transform\r\n       */\n      'text-transform': ['uppercase', 'lowercase', 'capitalize', 'normal-case'],\n\n      /**\r\n       * Text Overflow\r\n       * @see https://tailwindcss.com/docs/text-overflow\r\n       */\n      'text-overflow': ['truncate', 'text-ellipsis', 'text-clip'],\n\n      /**\r\n       * Text Indent\r\n       * @see https://tailwindcss.com/docs/text-indent\r\n       */\n      indent: [{\n        indent: [spacing]\n      }],\n\n      /**\r\n       * Vertical Alignment\r\n       * @see https://tailwindcss.com/docs/vertical-align\r\n       */\n      'vertical-align': [{\n        align: ['baseline', 'top', 'middle', 'bottom', 'text-top', 'text-bottom', 'sub', 'super', isArbitraryLength]\n      }],\n\n      /**\r\n       * Whitespace\r\n       * @see https://tailwindcss.com/docs/whitespace\r\n       */\n      whitespace: [{\n        whitespace: ['normal', 'nowrap', 'pre', 'pre-line', 'pre-wrap']\n      }],\n\n      /**\r\n       * Word Break\r\n       * @see https://tailwindcss.com/docs/word-break\r\n       */\n      \"break\": [{\n        \"break\": ['normal', 'words', 'all']\n      }],\n\n      /**\r\n       * Content\r\n       * @see https://tailwindcss.com/docs/content\r\n       */\n      content: [{\n        content: ['none', isArbitraryValue]\n      }],\n      // Backgrounds\n\n      /**\r\n       * Background Attachment\r\n       * @see https://tailwindcss.com/docs/background-attachment\r\n       */\n      'bg-attachment': [{\n        bg: ['fixed', 'local', 'scroll']\n      }],\n\n      /**\r\n       * Background Clip\r\n       * @see https://tailwindcss.com/docs/background-clip\r\n       */\n      'bg-clip': [{\n        'bg-clip': ['border', 'padding', 'content', 'text']\n      }],\n\n      /**\r\n       * Background Opacity\r\n       * @deprecated since Tailwind CSS v3.0.0\r\n       * @see https://tailwindcss.com/docs/background-opacity\r\n       */\n      'bg-opacity': [{\n        'bg-opacity': [opacity]\n      }],\n\n      /**\r\n       * Background Origin\r\n       * @see https://tailwindcss.com/docs/background-origin\r\n       */\n      'bg-origin': [{\n        'bg-origin': ['border', 'padding', 'content']\n      }],\n\n      /**\r\n       * Background Position\r\n       * @see https://tailwindcss.com/docs/background-position\r\n       */\n      'bg-position': [{\n        bg: [].concat(getPositions(), [isArbitraryPosition])\n      }],\n\n      /**\r\n       * Background Repeat\r\n       * @see https://tailwindcss.com/docs/background-repeat\r\n       */\n      'bg-repeat': [{\n        bg: ['no-repeat', {\n          repeat: ['', 'x', 'y', 'round', 'space']\n        }]\n      }],\n\n      /**\r\n       * Background Size\r\n       * @see https://tailwindcss.com/docs/background-size\r\n       */\n      'bg-size': [{\n        bg: ['auto', 'cover', 'contain', isArbitrarySize]\n      }],\n\n      /**\r\n       * Background Image\r\n       * @see https://tailwindcss.com/docs/background-image\r\n       */\n      'bg-image': [{\n        bg: ['none', {\n          'gradient-to': ['t', 'tr', 'r', 'br', 'b', 'bl', 'l', 'tl']\n        }, isArbitraryUrl]\n      }],\n\n      /**\r\n       * Background Color\r\n       * @see https://tailwindcss.com/docs/background-color\r\n       */\n      'bg-color': [{\n        bg: [colors]\n      }],\n\n      /**\r\n       * Gradient Color Stops From\r\n       * @see https://tailwindcss.com/docs/gradient-color-stops\r\n       */\n      'gradient-from': [{\n        from: [gradientColorStops]\n      }],\n\n      /**\r\n       * Gradient Color Stops Via\r\n       * @see https://tailwindcss.com/docs/gradient-color-stops\r\n       */\n      'gradient-via': [{\n        via: [gradientColorStops]\n      }],\n\n      /**\r\n       * Gradient Color Stops To\r\n       * @see https://tailwindcss.com/docs/gradient-color-stops\r\n       */\n      'gradient-to': [{\n        to: [gradientColorStops]\n      }],\n      // Borders\n\n      /**\r\n       * Border Radius\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\n      rounded: [{\n        rounded: [borderRadius]\n      }],\n\n      /**\r\n       * Border Radius Top\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\n      'rounded-t': [{\n        'rounded-t': [borderRadius]\n      }],\n\n      /**\r\n       * Border Radius Right\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\n      'rounded-r': [{\n        'rounded-r': [borderRadius]\n      }],\n\n      /**\r\n       * Border Radius Bottom\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\n      'rounded-b': [{\n        'rounded-b': [borderRadius]\n      }],\n\n      /**\r\n       * Border Radius Left\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\n      'rounded-l': [{\n        'rounded-l': [borderRadius]\n      }],\n\n      /**\r\n       * Border Radius Top Left\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\n      'rounded-tl': [{\n        'rounded-tl': [borderRadius]\n      }],\n\n      /**\r\n       * Border Radius Top Right\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\n      'rounded-tr': [{\n        'rounded-tr': [borderRadius]\n      }],\n\n      /**\r\n       * Border Radius Bottom Right\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\n      'rounded-br': [{\n        'rounded-br': [borderRadius]\n      }],\n\n      /**\r\n       * Border Radius Bottom Left\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\n      'rounded-bl': [{\n        'rounded-bl': [borderRadius]\n      }],\n\n      /**\r\n       * Border Width\r\n       * @see https://tailwindcss.com/docs/border-width\r\n       */\n      'border-w': [{\n        border: [borderWidth]\n      }],\n\n      /**\r\n       * Border Width X\r\n       * @see https://tailwindcss.com/docs/border-width\r\n       */\n      'border-w-x': [{\n        'border-x': [borderWidth]\n      }],\n\n      /**\r\n       * Border Width Y\r\n       * @see https://tailwindcss.com/docs/border-width\r\n       */\n      'border-w-y': [{\n        'border-y': [borderWidth]\n      }],\n\n      /**\r\n       * Border Width Top\r\n       * @see https://tailwindcss.com/docs/border-width\r\n       */\n      'border-w-t': [{\n        'border-t': [borderWidth]\n      }],\n\n      /**\r\n       * Border Width Right\r\n       * @see https://tailwindcss.com/docs/border-width\r\n       */\n      'border-w-r': [{\n        'border-r': [borderWidth]\n      }],\n\n      /**\r\n       * Border Width Bottom\r\n       * @see https://tailwindcss.com/docs/border-width\r\n       */\n      'border-w-b': [{\n        'border-b': [borderWidth]\n      }],\n\n      /**\r\n       * Border Width Left\r\n       * @see https://tailwindcss.com/docs/border-width\r\n       */\n      'border-w-l': [{\n        'border-l': [borderWidth]\n      }],\n\n      /**\r\n       * Border Opacity\r\n       * @see https://tailwindcss.com/docs/border-opacity\r\n       */\n      'border-opacity': [{\n        'border-opacity': [opacity]\n      }],\n\n      /**\r\n       * Border Style\r\n       * @see https://tailwindcss.com/docs/border-style\r\n       */\n      'border-style': [{\n        border: [].concat(getLineStyles(), ['hidden'])\n      }],\n\n      /**\r\n       * Divide Width X\r\n       * @see https://tailwindcss.com/docs/divide-width\r\n       */\n      'divide-x': [{\n        'divide-x': [borderWidth]\n      }],\n\n      /**\r\n       * Divide Width X Reverse\r\n       * @see https://tailwindcss.com/docs/divide-width\r\n       */\n      'divide-x-reverse': ['divide-x-reverse'],\n\n      /**\r\n       * Divide Width Y\r\n       * @see https://tailwindcss.com/docs/divide-width\r\n       */\n      'divide-y': [{\n        'divide-y': [borderWidth]\n      }],\n\n      /**\r\n       * Divide Width Y Reverse\r\n       * @see https://tailwindcss.com/docs/divide-width\r\n       */\n      'divide-y-reverse': ['divide-y-reverse'],\n\n      /**\r\n       * Divide Opacity\r\n       * @see https://tailwindcss.com/docs/divide-opacity\r\n       */\n      'divide-opacity': [{\n        'divide-opacity': [opacity]\n      }],\n\n      /**\r\n       * Divide Style\r\n       * @see https://tailwindcss.com/docs/divide-style\r\n       */\n      'divide-style': [{\n        divide: getLineStyles()\n      }],\n\n      /**\r\n       * Border Color\r\n       * @see https://tailwindcss.com/docs/border-color\r\n       */\n      'border-color': [{\n        border: [borderColor]\n      }],\n\n      /**\r\n       * Border Color X\r\n       * @see https://tailwindcss.com/docs/border-color\r\n       */\n      'border-color-x': [{\n        'border-x': [borderColor]\n      }],\n\n      /**\r\n       * Border Color Y\r\n       * @see https://tailwindcss.com/docs/border-color\r\n       */\n      'border-color-y': [{\n        'border-y': [borderColor]\n      }],\n\n      /**\r\n       * Border Color Top\r\n       * @see https://tailwindcss.com/docs/border-color\r\n       */\n      'border-color-t': [{\n        'border-t': [borderColor]\n      }],\n\n      /**\r\n       * Border Color Right\r\n       * @see https://tailwindcss.com/docs/border-color\r\n       */\n      'border-color-r': [{\n        'border-r': [borderColor]\n      }],\n\n      /**\r\n       * Border Color Bottom\r\n       * @see https://tailwindcss.com/docs/border-color\r\n       */\n      'border-color-b': [{\n        'border-b': [borderColor]\n      }],\n\n      /**\r\n       * Border Color Left\r\n       * @see https://tailwindcss.com/docs/border-color\r\n       */\n      'border-color-l': [{\n        'border-l': [borderColor]\n      }],\n\n      /**\r\n       * Divide Color\r\n       * @see https://tailwindcss.com/docs/divide-color\r\n       */\n      'divide-color': [{\n        divide: [borderColor]\n      }],\n\n      /**\r\n       * Outline Style\r\n       * @see https://tailwindcss.com/docs/outline-style\r\n       */\n      'outline-style': [{\n        outline: [''].concat(getLineStyles(), ['hidden'])\n      }],\n\n      /**\r\n       * Outline Offset\r\n       * @see https://tailwindcss.com/docs/outline-offset\r\n       */\n      'outline-offset': [{\n        'outline-offset': [isLength]\n      }],\n\n      /**\r\n       * Outline Width\r\n       * @see https://tailwindcss.com/docs/outline-width\r\n       */\n      'outline-w': [{\n        outline: [isLength]\n      }],\n\n      /**\r\n       * Outline Color\r\n       * @see https://tailwindcss.com/docs/outline-color\r\n       */\n      'outline-color': [{\n        outline: [colors]\n      }],\n\n      /**\r\n       * Ring Width\r\n       * @see https://tailwindcss.com/docs/ring-width\r\n       */\n      'ring-w': [{\n        ring: getLengthWithEmpty()\n      }],\n\n      /**\r\n       * Ring Width Inset\r\n       * @see https://tailwindcss.com/docs/ring-width\r\n       */\n      'ring-w-inset': ['ring-inset'],\n\n      /**\r\n       * Ring Color\r\n       * @see https://tailwindcss.com/docs/ring-color\r\n       */\n      'ring-color': [{\n        ring: [colors]\n      }],\n\n      /**\r\n       * Ring Opacity\r\n       * @see https://tailwindcss.com/docs/ring-opacity\r\n       */\n      'ring-opacity': [{\n        'ring-opacity': [opacity]\n      }],\n\n      /**\r\n       * Ring Offset Width\r\n       * @see https://tailwindcss.com/docs/ring-offset-width\r\n       */\n      'ring-offset-w': [{\n        'ring-offset': [isLength]\n      }],\n\n      /**\r\n       * Ring Offset Color\r\n       * @see https://tailwindcss.com/docs/ring-offset-color\r\n       */\n      'ring-offset-color': [{\n        'ring-offset': [colors]\n      }],\n      // Effects\n\n      /**\r\n       * Box Shadow\r\n       * @see https://tailwindcss.com/docs/box-shadow\r\n       */\n      shadow: [{\n        shadow: ['', 'inner', 'none', isTshirtSize, isArbitraryShadow]\n      }],\n\n      /**\r\n       * Box Shadow Color\r\n       * @see https://tailwindcss.com/docs/box-shadow-color\r\n       */\n      'shadow-color': [{\n        shadow: [isAny]\n      }],\n\n      /**\r\n       * Opacity\r\n       * @see https://tailwindcss.com/docs/opacity\r\n       */\n      opacity: [{\n        opacity: [opacity]\n      }],\n\n      /**\r\n       * Mix Beldn Mode\r\n       * @see https://tailwindcss.com/docs/mix-blend-mode\r\n       */\n      'mix-blend': [{\n        'mix-blend': getBlendModes()\n      }],\n\n      /**\r\n       * Background Blend Mode\r\n       * @see https://tailwindcss.com/docs/background-blend-mode\r\n       */\n      'bg-blend': [{\n        'bg-blend': getBlendModes()\n      }],\n      // Filters\n\n      /**\r\n       * Filter\r\n       * @deprecated since Tailwind CSS v3.0.0\r\n       * @see https://tailwindcss.com/docs/filter\r\n       */\n      filter: [{\n        filter: ['', 'none']\n      }],\n\n      /**\r\n       * Blur\r\n       * @see https://tailwindcss.com/docs/blur\r\n       */\n      blur: [{\n        blur: [blur]\n      }],\n\n      /**\r\n       * Brightness\r\n       * @see https://tailwindcss.com/docs/brightness\r\n       */\n      brightness: [{\n        brightness: [brightness]\n      }],\n\n      /**\r\n       * Contrast\r\n       * @see https://tailwindcss.com/docs/contrast\r\n       */\n      contrast: [{\n        contrast: [contrast]\n      }],\n\n      /**\r\n       * Drop Shadow\r\n       * @see https://tailwindcss.com/docs/drop-shadow\r\n       */\n      'drop-shadow': [{\n        'drop-shadow': ['', 'none', isTshirtSize, isArbitraryValue]\n      }],\n\n      /**\r\n       * Grayscale\r\n       * @see https://tailwindcss.com/docs/grayscale\r\n       */\n      grayscale: [{\n        grayscale: [grayscale]\n      }],\n\n      /**\r\n       * Hue Rotate\r\n       * @see https://tailwindcss.com/docs/hue-rotate\r\n       */\n      'hue-rotate': [{\n        'hue-rotate': [hueRotate]\n      }],\n\n      /**\r\n       * Invert\r\n       * @see https://tailwindcss.com/docs/invert\r\n       */\n      invert: [{\n        invert: [invert]\n      }],\n\n      /**\r\n       * Saturate\r\n       * @see https://tailwindcss.com/docs/saturate\r\n       */\n      saturate: [{\n        saturate: [saturate]\n      }],\n\n      /**\r\n       * Sepia\r\n       * @see https://tailwindcss.com/docs/sepia\r\n       */\n      sepia: [{\n        sepia: [sepia]\n      }],\n\n      /**\r\n       * Backdrop Filter\r\n       * @deprecated since Tailwind CSS v3.0.0\r\n       * @see https://tailwindcss.com/docs/backdrop-filter\r\n       */\n      'backdrop-filter': [{\n        'backdrop-filter': ['', 'none']\n      }],\n\n      /**\r\n       * Backdrop Blur\r\n       * @see https://tailwindcss.com/docs/backdrop-blur\r\n       */\n      'backdrop-blur': [{\n        'backdrop-blur': [blur]\n      }],\n\n      /**\r\n       * Backdrop Brightness\r\n       * @see https://tailwindcss.com/docs/backdrop-brightness\r\n       */\n      'backdrop-brightness': [{\n        'backdrop-brightness': [brightness]\n      }],\n\n      /**\r\n       * Backdrop Contrast\r\n       * @see https://tailwindcss.com/docs/backdrop-contrast\r\n       */\n      'backdrop-contrast': [{\n        'backdrop-contrast': [contrast]\n      }],\n\n      /**\r\n       * Backdrop Grayscale\r\n       * @see https://tailwindcss.com/docs/backdrop-grayscale\r\n       */\n      'backdrop-grayscale': [{\n        'backdrop-grayscale': [grayscale]\n      }],\n\n      /**\r\n       * Backdrop Hue Rotate\r\n       * @see https://tailwindcss.com/docs/backdrop-hue-rotate\r\n       */\n      'backdrop-hue-rotate': [{\n        'backdrop-hue-rotate': [hueRotate]\n      }],\n\n      /**\r\n       * Backdrop Invert\r\n       * @see https://tailwindcss.com/docs/backdrop-invert\r\n       */\n      'backdrop-invert': [{\n        'backdrop-invert': [invert]\n      }],\n\n      /**\r\n       * Backdrop Opacity\r\n       * @see https://tailwindcss.com/docs/backdrop-opacity\r\n       */\n      'backdrop-opacity': [{\n        'backdrop-opacity': [opacity]\n      }],\n\n      /**\r\n       * Backdrop Saturate\r\n       * @see https://tailwindcss.com/docs/backdrop-saturate\r\n       */\n      'backdrop-saturate': [{\n        'backdrop-saturate': [saturate]\n      }],\n\n      /**\r\n       * Backdrop Sepia\r\n       * @see https://tailwindcss.com/docs/backdrop-sepia\r\n       */\n      'backdrop-sepia': [{\n        'backdrop-sepia': [sepia]\n      }],\n      // Tables\n\n      /**\r\n       * Border Collapse\r\n       * @see https://tailwindcss.com/docs/border-collapse\r\n       */\n      'border-collapse': [{\n        border: ['collapse', 'separate']\n      }],\n\n      /**\r\n       * Table Layout\r\n       * @see https://tailwindcss.com/docs/table-layout\r\n       */\n      'table-layout': [{\n        table: ['auto', 'fixed']\n      }],\n      // Transitions and Animation\n\n      /**\r\n       * Tranisition Property\r\n       * @see https://tailwindcss.com/docs/transition-property\r\n       */\n      transition: [{\n        transition: ['none', 'all', '', 'colors', 'opacity', 'shadow', 'transform', isArbitraryValue]\n      }],\n\n      /**\r\n       * Transition Duration\r\n       * @see https://tailwindcss.com/docs/transition-duration\r\n       */\n      duration: [{\n        duration: [isInteger]\n      }],\n\n      /**\r\n       * Transition Timing Function\r\n       * @see https://tailwindcss.com/docs/transition-timing-function\r\n       */\n      ease: [{\n        ease: ['linear', 'in', 'out', 'in-out', isArbitraryValue]\n      }],\n\n      /**\r\n       * Transition Delay\r\n       * @see https://tailwindcss.com/docs/transition-delay\r\n       */\n      delay: [{\n        delay: [isInteger]\n      }],\n\n      /**\r\n       * Animation\r\n       * @see https://tailwindcss.com/docs/animation\r\n       */\n      animate: [{\n        animate: ['none', 'spin', 'ping', 'pulse', 'bounce', isArbitraryValue]\n      }],\n      // Transforms\n\n      /**\r\n       * Transform\r\n       * @see https://tailwindcss.com/docs/transform\r\n       */\n      transform: [{\n        transform: ['', 'gpu', 'none']\n      }],\n\n      /**\r\n       * Scale\r\n       * @see https://tailwindcss.com/docs/scale\r\n       */\n      scale: [{\n        scale: [scale]\n      }],\n\n      /**\r\n       * Scale X\r\n       * @see https://tailwindcss.com/docs/scale\r\n       */\n      'scale-x': [{\n        'scale-x': [scale]\n      }],\n\n      /**\r\n       * Scale Y\r\n       * @see https://tailwindcss.com/docs/scale\r\n       */\n      'scale-y': [{\n        'scale-y': [scale]\n      }],\n\n      /**\r\n       * Rotate\r\n       * @see https://tailwindcss.com/docs/rotate\r\n       */\n      rotate: [{\n        rotate: [isInteger, isArbitraryValue]\n      }],\n\n      /**\r\n       * Translate X\r\n       * @see https://tailwindcss.com/docs/translate\r\n       */\n      'translate-x': [{\n        'translate-x': [translate]\n      }],\n\n      /**\r\n       * Translate Y\r\n       * @see https://tailwindcss.com/docs/translate\r\n       */\n      'translate-y': [{\n        'translate-y': [translate]\n      }],\n\n      /**\r\n       * Skew X\r\n       * @see https://tailwindcss.com/docs/skew\r\n       */\n      'skew-x': [{\n        'skew-x': [skew]\n      }],\n\n      /**\r\n       * Skew Y\r\n       * @see https://tailwindcss.com/docs/skew\r\n       */\n      'skew-y': [{\n        'skew-y': [skew]\n      }],\n\n      /**\r\n       * Transform Origin\r\n       * @see https://tailwindcss.com/docs/transform-origin\r\n       */\n      'transform-origin': [{\n        origin: ['center', 'top', 'top-right', 'right', 'bottom-right', 'bottom', 'bottom-left', 'left', 'top-left', isArbitraryValue]\n      }],\n      // Interactivity\n\n      /**\r\n       * Accent Color\r\n       * @see https://tailwindcss.com/docs/accent-color\r\n       */\n      accent: [{\n        accent: ['auto', colors]\n      }],\n\n      /**\r\n       * Appearance\r\n       * @see https://tailwindcss.com/docs/appearance\r\n       */\n      appearance: ['appearance-none'],\n\n      /**\r\n       * Cursor\r\n       * @see https://tailwindcss.com/docs/cursor\r\n       */\n      cursor: [{\n        cursor: ['auto', 'default', 'pointer', 'wait', 'text', 'move', 'help', 'not-allowed', 'none', 'context-menu', 'progress', 'cell', 'crosshair', 'vertical-text', 'alias', 'copy', 'no-drop', 'grab', 'grabbing', 'all-scroll', 'col-resize', 'row-resize', 'n-resize', 'e-resize', 's-resize', 'w-resize', 'ne-resize', 'nw-resize', 'se-resize', 'sw-resize', 'ew-resize', 'ns-resize', 'nesw-resize', 'nwse-resize', 'zoom-in', 'zoom-out', isArbitraryValue]\n      }],\n\n      /**\r\n       * Caret Color\r\n       * @see https://tailwindcss.com/docs/just-in-time-mode#caret-color-utilities\r\n       */\n      'caret-color': [{\n        caret: [colors]\n      }],\n\n      /**\r\n       * Pointer Events\r\n       * @see https://tailwindcss.com/docs/pointer-events\r\n       */\n      'pointer-events': [{\n        'pointer-events': ['none', 'auto']\n      }],\n\n      /**\r\n       * Resize\r\n       * @see https://tailwindcss.com/docs/resize\r\n       */\n      resize: [{\n        resize: ['none', 'y', 'x', '']\n      }],\n\n      /**\r\n       * Scroll Behavior\r\n       * @see https://tailwindcss.com/docs/scroll-behavior\r\n       */\n      'scroll-behavior': [{\n        scroll: ['auto', 'smooth']\n      }],\n\n      /**\r\n       * Scroll Margin\r\n       * @see https://tailwindcss.com/docs/scroll-margin\r\n       */\n      'scroll-m': [{\n        'scroll-m': [spacing]\n      }],\n\n      /**\r\n       * Scroll Margin X\r\n       * @see https://tailwindcss.com/docs/scroll-margin\r\n       */\n      'scroll-mx': [{\n        'scroll-mx': [spacing]\n      }],\n\n      /**\r\n       * Scroll Margin Y\r\n       * @see https://tailwindcss.com/docs/scroll-margin\r\n       */\n      'scroll-my': [{\n        'scroll-my': [spacing]\n      }],\n\n      /**\r\n       * Scroll Margin Top\r\n       * @see https://tailwindcss.com/docs/scroll-margin\r\n       */\n      'scroll-mt': [{\n        'scroll-mt': [spacing]\n      }],\n\n      /**\r\n       * Scroll Margin Right\r\n       * @see https://tailwindcss.com/docs/scroll-margin\r\n       */\n      'scroll-mr': [{\n        'scroll-mr': [spacing]\n      }],\n\n      /**\r\n       * Scroll Margin Bottom\r\n       * @see https://tailwindcss.com/docs/scroll-margin\r\n       */\n      'scroll-mb': [{\n        'scroll-mb': [spacing]\n      }],\n\n      /**\r\n       * Scroll Margin Left\r\n       * @see https://tailwindcss.com/docs/scroll-margin\r\n       */\n      'scroll-ml': [{\n        'scroll-ml': [spacing]\n      }],\n\n      /**\r\n       * Scroll Padding\r\n       * @see https://tailwindcss.com/docs/scroll-padding\r\n       */\n      'scroll-p': [{\n        'scroll-p': [spacing]\n      }],\n\n      /**\r\n       * Scroll Padding X\r\n       * @see https://tailwindcss.com/docs/scroll-padding\r\n       */\n      'scroll-px': [{\n        'scroll-px': [spacing]\n      }],\n\n      /**\r\n       * Scroll Padding Y\r\n       * @see https://tailwindcss.com/docs/scroll-padding\r\n       */\n      'scroll-py': [{\n        'scroll-py': [spacing]\n      }],\n\n      /**\r\n       * Scroll Padding Top\r\n       * @see https://tailwindcss.com/docs/scroll-padding\r\n       */\n      'scroll-pt': [{\n        'scroll-pt': [spacing]\n      }],\n\n      /**\r\n       * Scroll Padding Right\r\n       * @see https://tailwindcss.com/docs/scroll-padding\r\n       */\n      'scroll-pr': [{\n        'scroll-pr': [spacing]\n      }],\n\n      /**\r\n       * Scroll Padding Bottom\r\n       * @see https://tailwindcss.com/docs/scroll-padding\r\n       */\n      'scroll-pb': [{\n        'scroll-pb': [spacing]\n      }],\n\n      /**\r\n       * Scroll Padding Left\r\n       * @see https://tailwindcss.com/docs/scroll-padding\r\n       */\n      'scroll-pl': [{\n        'scroll-pl': [spacing]\n      }],\n\n      /**\r\n       * Scroll Snap Align\r\n       * @see https://tailwindcss.com/docs/scroll-snap-align\r\n       */\n      'snap-align': [{\n        snap: ['start', 'end', 'center', 'align-none']\n      }],\n\n      /**\r\n       * Scroll Snap Stop\r\n       * @see https://tailwindcss.com/docs/scroll-snap-stop\r\n       */\n      'snap-stop': [{\n        snap: ['normal', 'always']\n      }],\n\n      /**\r\n       * Scroll Snap Type\r\n       * @see https://tailwindcss.com/docs/scroll-snap-type\r\n       */\n      'snap-type': [{\n        snap: ['none', 'x', 'y', 'both']\n      }],\n\n      /**\r\n       * Scroll Snap Type Strictness\r\n       * @see https://tailwindcss.com/docs/scroll-snap-type\r\n       */\n      'snap-strictness': [{\n        snap: ['mandatory', 'proximity']\n      }],\n\n      /**\r\n       * Touch Action\r\n       * @see https://tailwindcss.com/docs/touch-action\r\n       */\n      touch: [{\n        touch: ['auto', 'none', 'pinch-zoom', 'manipulation', {\n          pan: ['x', 'left', 'right', 'y', 'up', 'down']\n        }]\n      }],\n\n      /**\r\n       * User Select\r\n       * @see https://tailwindcss.com/docs/user-select\r\n       */\n      select: [{\n        select: ['none', 'text', 'all', 'auto']\n      }],\n\n      /**\r\n       * Will Change\r\n       * @see https://tailwindcss.com/docs/will-change\r\n       */\n      'will-change': [{\n        'will-change': ['auto', 'scroll', 'contents', 'transform', isArbitraryValue]\n      }],\n      // SVG\n\n      /**\r\n       * Fill\r\n       * @see https://tailwindcss.com/docs/fill\r\n       */\n      fill: [{\n        fill: [colors]\n      }],\n\n      /**\r\n       * Stroke Width\r\n       * @see https://tailwindcss.com/docs/stroke-width\r\n       */\n      'stroke-w': [{\n        stroke: [isLength]\n      }],\n\n      /**\r\n       * Stroke\r\n       * @see https://tailwindcss.com/docs/stroke\r\n       */\n      stroke: [{\n        stroke: [colors]\n      }],\n      // Accessibility\n\n      /**\r\n       * Screen Readers\r\n       * @see https://tailwindcss.com/docs/screen-readers\r\n       */\n      sr: ['sr-only', 'not-sr-only']\n    },\n    conflictingClassGroups: {\n      overflow: ['overflow-x', 'overflow-y'],\n      overscroll: ['overscroll-x', 'overscroll-y'],\n      inset: ['inset-x', 'inset-y', 'top', 'right', 'bottom', 'left'],\n      'inset-x': ['right', 'left'],\n      'inset-y': ['top', 'bottom'],\n      flex: ['basis', 'grow', 'shrink'],\n      'col-start-end': ['col-start', 'col-end'],\n      'row-start-end': ['row-start', 'row-end'],\n      gap: ['gap-x', 'gap-y'],\n      p: ['px', 'py', 'pt', 'pr', 'pb', 'pl'],\n      px: ['pr', 'pl'],\n      py: ['pt', 'pb'],\n      m: ['mx', 'my', 'mt', 'mr', 'mb', 'ml'],\n      mx: ['mr', 'ml'],\n      my: ['mt', 'mb'],\n      'font-size': ['leading'],\n      'fvn-normal': ['fvn-ordinal', 'fvn-slashed-zero', 'fvn-figure', 'fvn-spacing', 'fvn-fraction'],\n      'fvn-ordinal': ['fvn-normal'],\n      'fvn-slashed-zero': ['fvn-normal'],\n      'fvn-figure': ['fvn-normal'],\n      'fvn-spacing': ['fvn-normal'],\n      'fvn-fraction': ['fvn-normal'],\n      rounded: ['rounded-t', 'rounded-r', 'rounded-b', 'rounded-l', 'rounded-tl', 'rounded-tr', 'rounded-br', 'rounded-bl'],\n      'rounded-t': ['rounded-tl', 'rounded-tr'],\n      'rounded-r': ['rounded-tr', 'rounded-br'],\n      'rounded-b': ['rounded-br', 'rounded-bl'],\n      'rounded-l': ['rounded-tl', 'rounded-bl'],\n      'border-w': ['border-w-t', 'border-w-r', 'border-w-b', 'border-w-l'],\n      'border-w-x': ['border-w-r', 'border-w-l'],\n      'border-w-y': ['border-w-t', 'border-w-b'],\n      'border-color': ['border-color-t', 'border-color-r', 'border-color-b', 'border-color-l'],\n      'border-color-x': ['border-color-r', 'border-color-l'],\n      'border-color-y': ['border-color-t', 'border-color-b'],\n      'scroll-m': ['scroll-mx', 'scroll-my', 'scroll-mt', 'scroll-mr', 'scroll-mb', 'scroll-ml'],\n      'scroll-mx': ['scroll-mr', 'scroll-ml'],\n      'scroll-my': ['scroll-mt', 'scroll-mb'],\n      'scroll-p': ['scroll-px', 'scroll-py', 'scroll-pt', 'scroll-pr', 'scroll-pb', 'scroll-pl'],\n      'scroll-px': ['scroll-pr', 'scroll-pl'],\n      'scroll-py': ['scroll-pt', 'scroll-pb']\n    }\n  };\n}\n\nvar twMerge = /*#__PURE__*/createTailwindMerge(getDefaultConfig);\n/**\r\n * @param baseConfig Config where other config will be merged into. This object will be mutated.\r\n * @param configExtension Partial config to merge into the `baseConfig`.\r\n */\n\nfunction mergeConfigs(baseConfig, configExtension) {\n  for (var key in configExtension) {\n    mergePropertyRecursively(baseConfig, key, configExtension[key]);\n  }\n\n  return baseConfig;\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar overrideTypes = /*#__PURE__*/new Set(['string', 'number', 'boolean']);\n\nfunction mergePropertyRecursively(baseObject, mergeKey, mergeValue) {\n  if (!hasOwnProperty.call(baseObject, mergeKey) || overrideTypes.has(typeof mergeValue) || mergeValue === null) {\n    baseObject[mergeKey] = mergeValue;\n    return;\n  }\n\n  if (Array.isArray(mergeValue) && Array.isArray(baseObject[mergeKey])) {\n    baseObject[mergeKey] = baseObject[mergeKey].concat(mergeValue);\n    return;\n  }\n\n  if (typeof mergeValue === 'object' && typeof baseObject[mergeKey] === 'object') {\n    if (baseObject[mergeKey] === null) {\n      baseObject[mergeKey] = mergeValue;\n      return;\n    }\n\n    for (var nextKey in mergeValue) {\n      mergePropertyRecursively(baseObject[mergeKey], nextKey, mergeValue[nextKey]);\n    }\n  }\n}\n\nfunction extendTailwindMerge(configExtension) {\n  for (var _len = arguments.length, createConfig = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    createConfig[_key - 1] = arguments[_key];\n  }\n\n  return typeof configExtension === 'function' ? createTailwindMerge.apply(void 0, [getDefaultConfig, configExtension].concat(createConfig)) : createTailwindMerge.apply(void 0, [function () {\n    return mergeConfigs(getDefaultConfig(), configExtension);\n  }].concat(createConfig));\n}\n\nexports.createTailwindMerge = createTailwindMerge;\nexports.extendTailwindMerge = extendTailwindMerge;\nexports.fromTheme = fromTheme;\nexports.getDefaultConfig = getDefaultConfig;\nexports.mergeConfigs = mergeConfigs;\nexports.twMerge = twMerge;\nexports.validators = validators;","map":{"version":3,"sources":["/home/valquir/Desktop/projects/Portifolio/node_modules/tailwind-merge/src/lib/lru-cache.ts","/home/valquir/Desktop/projects/Portifolio/node_modules/tailwind-merge/src/lib/class-utils.ts","/home/valquir/Desktop/projects/Portifolio/node_modules/tailwind-merge/src/lib/config-utils.ts","/home/valquir/Desktop/projects/Portifolio/node_modules/tailwind-merge/src/lib/merge-classlist.ts","/home/valquir/Desktop/projects/Portifolio/node_modules/tailwind-merge/src/lib/create-tailwind-merge.ts","/home/valquir/Desktop/projects/Portifolio/node_modules/tailwind-merge/src/lib/from-theme.ts","/home/valquir/Desktop/projects/Portifolio/node_modules/tailwind-merge/src/lib/validators.ts","/home/valquir/Desktop/projects/Portifolio/node_modules/tailwind-merge/src/lib/default-config.ts","/home/valquir/Desktop/projects/Portifolio/node_modules/tailwind-merge/src/lib/tailwind-merge.ts","/home/valquir/Desktop/projects/Portifolio/node_modules/tailwind-merge/src/lib/merge-configs.ts","/home/valquir/Desktop/projects/Portifolio/node_modules/tailwind-merge/src/lib/extend-tailwind-merge.ts"],"names":["getLruCache","cacheSize","HLRU","get","set","CLASS_PART_SEPARATOR","createClassUtils","config","classMap","createClassMap","classParts","className","getGroupRecursive","getGroupIdForArbitraryProperty","getClassGroupId","getConflictingClassGroupIds","classPartObject","currentClassPart","nextClassPartObject","classGroupFromNextClassPart","classRest","validator","arbitraryPropertyRegex","arbitraryPropertyClassName","property","theme","prefix","nextPart","validators","prefixedClassGroupEntries","getPrefixedClassGroupEntries","Object","classGroupId","classGroup","processClassesRecursively","classPartObjectToEdit","classDefinition","getPart","isThemeGetter","key","currentClassPartObject","path","func","prefixedClassGroup","value","createConfigUtils","cache","SPLIT_CLASSES_REGEX","IMPORTANT_MODIFIER","MODIFIER_SEPARATOR_REGEX","MODIFIER_SEPARATOR","mergeClassList","classList","configUtils","classGroupsInConflict","modifiers","originalClassName","classNameWithImportantModifier","hasImportantModifier","isTailwindClass","variantModifier","fullModifier","modifier","parsed","classId","createTailwindMerge","createConfig","functionToCall","firstCreateConfig","restCreateConfig","createConfigCurrent","cacheGet","cacheSet","tailwindMerge","cachedResult","result","index","arguments","temp","fromTheme","themeGetter","arbitraryValueRegex","fractionRegex","stringLengths","tshirtUnitRegex","lengthUnitRegex","shadowRegex","isLength","classPart","Number","isArbitraryLength","arbitraryValue","isArbitrarySize","isArbitraryPosition","isArbitraryUrl","isArbitraryWeight","isInteger","isArbitraryValue","isAny","isTshirtSize","isArbitraryShadow","getDefaultConfig","colors","spacing","blur","brightness","borderColor","borderRadius","borderWidth","contrast","grayscale","hueRotate","invert","gap","gradientColorStops","inset","margin","opacity","padding","saturate","scale","sepia","skew","space","translate","getOverscroll","getOverflow","getSpacingWithAuto","getLengthWithEmpty","getIntegerWithAuto","getPositions","getLineStyles","getBlendModes","getAlign","getZeroAndEmpty","getBreaks","classGroups","aspect","container","columns","box","display","clear","isolation","object","overflow","overscroll","position","top","right","bottom","left","visibility","z","basis","flex","grow","shrink","order","col","span","row","justify","content","items","self","p","px","py","pt","pr","pb","pl","m","mx","my","mt","mr","mb","ml","w","screen","h","text","font","tracking","leading","list","placeholder","decoration","indent","align","whitespace","bg","repeat","from","via","to","rounded","border","divide","outline","ring","shadow","filter","table","transition","duration","ease","delay","animate","transform","rotate","origin","accent","appearance","cursor","caret","resize","scroll","snap","touch","pan","select","fill","stroke","sr","conflictingClassGroups","twMerge","mergeConfigs","baseConfig","configExtension","mergePropertyRecursively","hasOwnProperty","overrideTypes","mergeValue","baseObject","Array","extendTailwindMerge"],"mappings":"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","sourcesContent":["import HLRU from 'hashlru'\n\n// Export is needed because TypeScript complains about an error otherwise:\n// Error: …/tailwind-merge/src/config-utils.ts(8,17): semantic error TS4058: Return type of exported function has or is using name 'LruCache' from external module \"…/tailwind-merge/src/lru-cache\" but cannot be named.\nexport interface LruCache<T> {\n    get(key: string): T | undefined\n    set(key: string, value: T): void\n}\n\nexport function getLruCache<T>(cacheSize: number): LruCache<T> {\n    if (cacheSize >= 1) {\n        return HLRU(cacheSize)\n    }\n\n    return {\n        get: () => undefined,\n        set: () => {},\n    }\n}\n","import { ClassGroupId, Config, ClassGroup, ClassValidator, ThemeObject, ThemeGetter } from './types'\n\nexport interface ClassPartObject {\n    nextPart: Record<string, ClassPartObject>\n    validators: ClassValidatorObject[]\n    classGroupId?: ClassGroupId\n}\n\ninterface ClassValidatorObject {\n    classGroupId: ClassGroupId\n    validator: ClassValidator\n}\n\nconst CLASS_PART_SEPARATOR = '-'\n\nexport function createClassUtils(config: Config) {\n    const classMap = createClassMap(config)\n\n    function getClassGroupId(className: string) {\n        const classParts = className.split(CLASS_PART_SEPARATOR)\n\n        // Classes like `-inset-1` produce an empty string as first classPart. We assume that classes for negative values are used correctly and remove it from classParts.\n        if (classParts[0] === '' && classParts.length !== 1) {\n            classParts.shift()\n        }\n\n        return getGroupRecursive(classParts, classMap) || getGroupIdForArbitraryProperty(className)\n    }\n\n    function getConflictingClassGroupIds(classGroupId: ClassGroupId) {\n        return config.conflictingClassGroups[classGroupId] || []\n    }\n\n    return {\n        getClassGroupId,\n        getConflictingClassGroupIds,\n    }\n}\n\nfunction getGroupRecursive(\n    classParts: string[],\n    classPartObject: ClassPartObject\n): ClassGroupId | undefined {\n    if (classParts.length === 0) {\n        return classPartObject.classGroupId\n    }\n\n    const currentClassPart = classParts[0]!\n    const nextClassPartObject = classPartObject.nextPart[currentClassPart]\n    const classGroupFromNextClassPart = nextClassPartObject\n        ? getGroupRecursive(classParts.slice(1), nextClassPartObject)\n        : undefined\n\n    if (classGroupFromNextClassPart) {\n        return classGroupFromNextClassPart\n    }\n\n    if (classPartObject.validators.length === 0) {\n        return undefined\n    }\n\n    const classRest = classParts.join(CLASS_PART_SEPARATOR)\n\n    return classPartObject.validators.find(({ validator }) => validator(classRest))?.classGroupId\n}\n\nconst arbitraryPropertyRegex = /^\\[(.+)\\]$/\n\nfunction getGroupIdForArbitraryProperty(className: string) {\n    if (arbitraryPropertyRegex.test(className)) {\n        const arbitraryPropertyClassName = arbitraryPropertyRegex.exec(className)![1]\n        const property = arbitraryPropertyClassName?.substring(\n            0,\n            arbitraryPropertyClassName.indexOf(':')\n        )\n\n        if (property) {\n            // I use two dots here because one dot is used as prefix for class groups in plugins\n            return 'arbitrary..' + property\n        }\n    }\n}\n\n/**\n * Exported for testing only\n */\nexport function createClassMap(config: Config) {\n    const { theme, prefix } = config\n    const classMap: ClassPartObject = {\n        nextPart: {},\n        validators: [],\n    }\n\n    const prefixedClassGroupEntries = getPrefixedClassGroupEntries(\n        Object.entries(config.classGroups),\n        prefix\n    )\n\n    prefixedClassGroupEntries.forEach(([classGroupId, classGroup]) => {\n        processClassesRecursively(classGroup, classMap, classGroupId, theme)\n    })\n\n    return classMap\n}\n\nfunction processClassesRecursively(\n    classGroup: ClassGroup,\n    classPartObject: ClassPartObject,\n    classGroupId: ClassGroupId,\n    theme: ThemeObject\n) {\n    classGroup.forEach((classDefinition) => {\n        if (typeof classDefinition === 'string') {\n            const classPartObjectToEdit =\n                classDefinition === '' ? classPartObject : getPart(classPartObject, classDefinition)\n            classPartObjectToEdit.classGroupId = classGroupId\n            return\n        }\n\n        if (typeof classDefinition === 'function') {\n            if (isThemeGetter(classDefinition)) {\n                processClassesRecursively(\n                    classDefinition(theme),\n                    classPartObject,\n                    classGroupId,\n                    theme\n                )\n                return\n            }\n\n            classPartObject.validators.push({\n                validator: classDefinition,\n                classGroupId,\n            })\n\n            return\n        }\n\n        Object.entries(classDefinition).forEach(([key, classGroup]) => {\n            processClassesRecursively(\n                classGroup,\n                getPart(classPartObject, key),\n                classGroupId,\n                theme\n            )\n        })\n    })\n}\n\nfunction getPart(classPartObject: ClassPartObject, path: string) {\n    let currentClassPartObject = classPartObject\n\n    path.split(CLASS_PART_SEPARATOR).forEach((pathPart) => {\n        if (currentClassPartObject.nextPart[pathPart] === undefined) {\n            currentClassPartObject.nextPart[pathPart] = {\n                nextPart: {},\n                validators: [],\n            }\n        }\n\n        currentClassPartObject = currentClassPartObject.nextPart[pathPart]!\n    })\n\n    return currentClassPartObject\n}\n\nfunction isThemeGetter(func: ClassValidator | ThemeGetter): func is ThemeGetter {\n    return (func as ThemeGetter).isThemeGetter\n}\n\nfunction getPrefixedClassGroupEntries(\n    classGroupEntries: Array<[classGroupId: string, classGroup: ClassGroup]>,\n    prefix: string | undefined\n): Array<[classGroupId: string, classGroup: ClassGroup]> {\n    if (!prefix) {\n        return classGroupEntries\n    }\n\n    return classGroupEntries.map(([classGroupId, classGroup]) => {\n        const prefixedClassGroup = classGroup.map((classDefinition) => {\n            if (typeof classDefinition === 'string') {\n                return prefix + classDefinition\n            }\n\n            if (typeof classDefinition === 'object') {\n                return Object.fromEntries(\n                    Object.entries(classDefinition).map(([key, value]) => [prefix + key, value])\n                )\n            }\n\n            return classDefinition\n        })\n\n        return [classGroupId, prefixedClassGroup]\n    })\n}\n","import { getLruCache } from './lru-cache'\nimport { Config } from './types'\nimport { createClassUtils } from './class-utils'\n\nexport type ConfigUtils = ReturnType<typeof createConfigUtils>\n\nexport function createConfigUtils(config: Config) {\n    return {\n        cache: getLruCache<string>(config.cacheSize),\n        ...createClassUtils(config),\n    }\n}\n","import { ConfigUtils } from './config-utils'\n\nconst SPLIT_CLASSES_REGEX = /\\s+/\nconst IMPORTANT_MODIFIER = '!'\n// Regex is needed so we don't match against colons in labels for arbitrary values like `text-[color:var(--mystery-var)]`\n// I'd prefer to use a negative lookbehind for all supported labels, but lookbheinds don't have good browser support yet. More info: https://caniuse.com/js-regexp-lookbehind\nconst MODIFIER_SEPARATOR_REGEX = /:(?![^[]*\\])/\nconst MODIFIER_SEPARATOR = ':'\n\nexport function mergeClassList(classList: string, configUtils: ConfigUtils) {\n    const { getClassGroupId, getConflictingClassGroupIds } = configUtils\n\n    /**\n     * Set of classGroupIds in following format:\n     * `{importantModifier}{variantModifiers}{classGroupId}`\n     * @example 'float'\n     * @example 'hover:focus:bg-color'\n     * @example '!md:pr'\n     */\n    const classGroupsInConflict = new Set<string>()\n\n    return (\n        classList\n            .trim()\n            .split(SPLIT_CLASSES_REGEX)\n            .map((originalClassName) => {\n                const modifiers = originalClassName.split(MODIFIER_SEPARATOR_REGEX)\n                const classNameWithImportantModifier = modifiers.pop()!\n\n                const hasImportantModifier =\n                    classNameWithImportantModifier.startsWith(IMPORTANT_MODIFIER)\n                const className = hasImportantModifier\n                    ? classNameWithImportantModifier.substring(1)\n                    : classNameWithImportantModifier\n\n                const classGroupId = getClassGroupId(className)\n\n                if (!classGroupId) {\n                    return {\n                        isTailwindClass: false as const,\n                        originalClassName,\n                    }\n                }\n\n                const variantModifier =\n                    modifiers.length === 0\n                        ? ''\n                        : modifiers.sort().concat('').join(MODIFIER_SEPARATOR)\n\n                const fullModifier = hasImportantModifier\n                    ? IMPORTANT_MODIFIER + variantModifier\n                    : variantModifier\n\n                return {\n                    isTailwindClass: true as const,\n                    modifier: fullModifier,\n                    classGroupId,\n                    originalClassName,\n                }\n            })\n            .reverse()\n            // Last class in conflict wins, so we need to filter conflicting classes in reverse order.\n            .filter((parsed) => {\n                if (!parsed.isTailwindClass) {\n                    return true\n                }\n\n                const { modifier, classGroupId } = parsed\n\n                const classId = `${modifier}:${classGroupId}`\n\n                if (classGroupsInConflict.has(classId)) {\n                    return false\n                }\n\n                classGroupsInConflict.add(classId)\n\n                getConflictingClassGroupIds(classGroupId).forEach((group) =>\n                    classGroupsInConflict.add(`${modifier}:${group}`)\n                )\n\n                return true\n            })\n            .reverse()\n            .map((parsed) => parsed.originalClassName)\n            .join(' ')\n    )\n}\n","import { createConfigUtils } from './config-utils'\nimport { Config } from './types'\nimport { mergeClassList } from './merge-classlist'\n\ntype CreateConfigFirst = () => Config\ntype CreateConfigSubsequent = (config: Config) => Config\ntype ClassLists = ClassListElement[]\ntype ClassListElement = string | undefined | null | false\ntype TailwindMerge = (...classLists: ClassLists) => string\ntype ConfigUtils = ReturnType<typeof createConfigUtils>\n\nexport function createTailwindMerge(\n    ...createConfig: [CreateConfigFirst, ...CreateConfigSubsequent[]]\n): TailwindMerge {\n    let configUtils: ConfigUtils\n    let cacheGet: ConfigUtils['cache']['get']\n    let cacheSet: ConfigUtils['cache']['set']\n    let functionToCall = initTailwindMerge\n\n    function initTailwindMerge(classList: string) {\n        const [firstCreateConfig, ...restCreateConfig] = createConfig\n\n        const config = restCreateConfig.reduce(\n            (previousConfig, createConfigCurrent) => createConfigCurrent(previousConfig),\n            firstCreateConfig()\n        )\n\n        configUtils = createConfigUtils(config)\n        cacheGet = configUtils.cache.get\n        cacheSet = configUtils.cache.set\n        functionToCall = tailwindMerge\n\n        return tailwindMerge(classList)\n    }\n\n    function tailwindMerge(classList: string) {\n        const cachedResult = cacheGet(classList)\n\n        if (cachedResult) {\n            return cachedResult\n        }\n\n        const result = mergeClassList(classList, configUtils)\n        cacheSet(classList, result)\n\n        return result\n    }\n\n    return function callTailwindMerge() {\n        let classList = ''\n        let temp: ClassListElement\n\n        // Credits → https://github.com/lukeed/clsx/blob/v1.1.1/src/index.js\n        for (let index = 0; index < arguments.length; index += 1) {\n            if ((temp = arguments[index])) {\n                classList && (classList += ' ')\n                classList += temp\n            }\n        }\n\n        return functionToCall(classList)\n    }\n}\n","import { ThemeGetter, ThemeObject } from './types'\n\nexport function fromTheme(key: string): ThemeGetter {\n    const themeGetter = (theme: ThemeObject) => theme[key] || []\n\n    themeGetter.isThemeGetter = true as const\n\n    return themeGetter\n}\n","const arbitraryValueRegex = /^\\[(.+)\\]$/\nconst fractionRegex = /^\\d+\\/\\d+$/\nconst stringLengths = new Set(['px', 'full', 'screen'])\nconst tshirtUnitRegex = /^(\\d+)?(xs|sm|md|lg|xl)$/\nconst lengthUnitRegex = /\\d+(%|px|em|rem|vh|vw|pt|pc|in|cm|mm|cap|ch|ex|lh|rlh|vi|vb|vmin|vmax)/\n// Shadow always begins with x and y offset separated by underscore\nconst shadowRegex = /^-?((\\d+)?\\.?(\\d+)[a-z]+|0)_-?((\\d+)?\\.?(\\d+)[a-z]+|0)/\n\nexport function isLength(classPart: string) {\n    return (\n        !Number.isNaN(Number(classPart)) ||\n        stringLengths.has(classPart) ||\n        fractionRegex.test(classPart) ||\n        isArbitraryLength(classPart)\n    )\n}\n\nexport function isArbitraryLength(classPart: string) {\n    const arbitraryValue = arbitraryValueRegex.exec(classPart)?.[1]\n\n    if (arbitraryValue) {\n        return arbitraryValue.startsWith('length:') || lengthUnitRegex.test(arbitraryValue)\n    }\n\n    return false\n}\n\nexport function isArbitrarySize(classPart: string) {\n    const arbitraryValue = arbitraryValueRegex.exec(classPart)?.[1]\n\n    return arbitraryValue ? arbitraryValue.startsWith('size:') : false\n}\n\nexport function isArbitraryPosition(classPart: string) {\n    const arbitraryValue = arbitraryValueRegex.exec(classPart)?.[1]\n\n    return arbitraryValue ? arbitraryValue.startsWith('position:') : false\n}\n\nexport function isArbitraryUrl(classPart: string) {\n    const arbitraryValue = arbitraryValueRegex.exec(classPart)?.[1]\n\n    return arbitraryValue\n        ? arbitraryValue.startsWith('url(') || arbitraryValue.startsWith('url:')\n        : false\n}\n\nexport function isArbitraryWeight(classPart: string) {\n    const arbitraryValue = arbitraryValueRegex.exec(classPart)?.[1]\n\n    return arbitraryValue\n        ? !Number.isNaN(Number(arbitraryValue)) || arbitraryValue.startsWith('number:')\n        : false\n}\n\nexport function isInteger(classPart: string) {\n    const arbitraryValue = arbitraryValueRegex.exec(classPart)?.[1]\n\n    if (arbitraryValue) {\n        return Number.isInteger(Number(arbitraryValue))\n    }\n\n    return Number.isInteger(Number(classPart))\n}\n\nexport function isArbitraryValue(classPart: string) {\n    return arbitraryValueRegex.test(classPart)\n}\n\nexport function isAny() {\n    return true\n}\n\nexport function isTshirtSize(classPart: string) {\n    return tshirtUnitRegex.test(classPart)\n}\n\nexport function isArbitraryShadow(classPart: string) {\n    const arbitraryValue = arbitraryValueRegex.exec(classPart)?.[1]\n\n    if (arbitraryValue) {\n        return shadowRegex.test(arbitraryValue)\n    }\n\n    return false\n}\n","import { fromTheme } from './from-theme'\nimport {\n    isAny,\n    isArbitraryLength,\n    isArbitraryPosition,\n    isArbitraryShadow,\n    isArbitrarySize,\n    isArbitraryUrl,\n    isArbitraryValue,\n    isArbitraryWeight,\n    isInteger,\n    isLength,\n    isTshirtSize,\n} from './validators'\n\nexport function getDefaultConfig() {\n    const colors = fromTheme('colors')\n    const spacing = fromTheme('spacing')\n    const blur = fromTheme('blur')\n    const brightness = fromTheme('brightness')\n    const borderColor = fromTheme('borderColor')\n    const borderRadius = fromTheme('borderRadius')\n    const borderWidth = fromTheme('borderWidth')\n    const contrast = fromTheme('contrast')\n    const grayscale = fromTheme('grayscale')\n    const hueRotate = fromTheme('hueRotate')\n    const invert = fromTheme('invert')\n    const gap = fromTheme('gap')\n    const gradientColorStops = fromTheme('gradientColorStops')\n    const inset = fromTheme('inset')\n    const margin = fromTheme('margin')\n    const opacity = fromTheme('opacity')\n    const padding = fromTheme('padding')\n    const saturate = fromTheme('saturate')\n    const scale = fromTheme('scale')\n    const sepia = fromTheme('sepia')\n    const skew = fromTheme('skew')\n    const space = fromTheme('space')\n    const translate = fromTheme('translate')\n\n    const getOverscroll = () => ['auto', 'contain', 'none'] as const\n    const getOverflow = () => ['auto', 'hidden', 'clip', 'visible', 'scroll'] as const\n    const getSpacingWithAuto = () => ['auto', spacing] as const\n    const getLengthWithEmpty = () => ['', isLength] as const\n    const getIntegerWithAuto = () => ['auto', isInteger] as const\n    const getPositions = () =>\n        [\n            'bottom',\n            'center',\n            'left',\n            'left-bottom',\n            'left-top',\n            'right',\n            'right-bottom',\n            'right-top',\n            'top',\n        ] as const\n    const getLineStyles = () => ['solid', 'dashed', 'dotted', 'double', 'none'] as const\n    const getBlendModes = () =>\n        [\n            'normal',\n            'multiply',\n            'screen',\n            'overlay',\n            'darken',\n            'lighten',\n            'color-dodge',\n            'color-burn',\n            'hard-light',\n            'soft-light',\n            'difference',\n            'exclusion',\n            'hue',\n            'saturation',\n            'color',\n            'luminosity',\n        ] as const\n    const getAlign = () => ['start', 'end', 'center', 'between', 'around', 'evenly'] as const\n    const getZeroAndEmpty = () => ['', '0', isArbitraryValue] as const\n    const getBreaks = () =>\n        ['auto', 'avoid', 'all', 'avoid-page', 'page', 'left', 'right', 'column'] as const\n\n    return {\n        cacheSize: 500,\n        theme: {\n            colors: [isAny],\n            spacing: [isLength],\n            blur: ['none', '', isTshirtSize, isArbitraryLength],\n            brightness: [isInteger],\n            borderColor: [colors],\n            borderRadius: ['none', '', 'full', isTshirtSize, isArbitraryLength],\n            borderWidth: getLengthWithEmpty(),\n            contrast: [isInteger],\n            grayscale: getZeroAndEmpty(),\n            hueRotate: [isInteger],\n            invert: getZeroAndEmpty(),\n            gap: [spacing],\n            gradientColorStops: [colors],\n            inset: getSpacingWithAuto(),\n            margin: getSpacingWithAuto(),\n            opacity: [isInteger],\n            padding: [spacing],\n            saturate: [isInteger],\n            scale: [isInteger],\n            sepia: getZeroAndEmpty(),\n            skew: [isInteger, isArbitraryValue],\n            space: [spacing],\n            translate: [spacing],\n        },\n        classGroups: {\n            // Layout\n            /**\n             * Aspect Ratio\n             * @see https://tailwindcss.com/docs/aspect-ratio\n             */\n            aspect: [{ aspect: ['auto', 'square', 'video', isArbitraryValue] }],\n            /**\n             * Container\n             * @see https://tailwindcss.com/docs/container\n             */\n            container: ['container'],\n            /**\n             * Columns\n             * @see https://tailwindcss.com/docs/columns\n             */\n            columns: [{ columns: [isTshirtSize] }],\n            /**\n             * Break After\n             * @see https://tailwindcss.com/docs/break-after\n             */\n            'break-after': [{ 'break-after': getBreaks() }],\n            /**\n             * Break Before\n             * @see https://tailwindcss.com/docs/break-before\n             */\n            'break-before': [{ 'break-before': getBreaks() }],\n            /**\n             * Break Inside\n             * @see https://tailwindcss.com/docs/break-inside\n             */\n            'break-inside': [{ 'break-inside': ['auto', 'avoid', 'avoid-page', 'avoid-column'] }],\n            /**\n             * Box Decoration Break\n             * @see https://tailwindcss.com/docs/box-decoration-break\n             */\n            'box-decoration': [{ 'box-decoration': ['slice', 'clone'] }],\n            /**\n             * Box Sizing\n             * @see https://tailwindcss.com/docs/box-sizing\n             */\n            box: [{ box: ['border', 'content'] }],\n            /**\n             * Display\n             * @see https://tailwindcss.com/docs/display\n             */\n            display: [\n                'block',\n                'inline-block',\n                'inline',\n                'flex',\n                'inline-flex',\n                'table',\n                'inline-table',\n                'table-caption',\n                'table-cell',\n                'table-column',\n                'table-column-group',\n                'table-footer-group',\n                'table-header-group',\n                'table-row-group',\n                'table-row',\n                'flow-root',\n                'grid',\n                'inline-grid',\n                'contents',\n                'list-item',\n                'hidden',\n            ],\n            /**\n             * Floats\n             * @see https://tailwindcss.com/docs/float\n             */\n            float: [{ float: ['right', 'left', 'none'] }],\n            /**\n             * Clear\n             * @see https://tailwindcss.com/docs/clear\n             */\n            clear: [{ clear: ['left', 'right', 'both', 'none'] }],\n            /**\n             * Isolation\n             * @see https://tailwindcss.com/docs/isolation\n             */\n            isolation: ['isolate', 'isolation-auto'],\n            /**\n             * Object Fit\n             * @see https://tailwindcss.com/docs/object-fit\n             */\n            'object-fit': [{ object: ['contain', 'cover', 'fill', 'none', 'scale-down'] }],\n            /**\n             * Object Position\n             * @see https://tailwindcss.com/docs/object-position\n             */\n            'object-position': [{ object: [...getPositions(), isArbitraryValue] }],\n            /**\n             * Overflow\n             * @see https://tailwindcss.com/docs/overflow\n             */\n            overflow: [{ overflow: getOverflow() }],\n            /**\n             * Overflow X\n             * @see https://tailwindcss.com/docs/overflow\n             */\n            'overflow-x': [{ 'overflow-x': getOverflow() }],\n            /**\n             * Overflow Y\n             * @see https://tailwindcss.com/docs/overflow\n             */\n            'overflow-y': [{ 'overflow-y': getOverflow() }],\n            /**\n             * Overscroll Behavior\n             * @see https://tailwindcss.com/docs/overscroll-behavior\n             */\n            overscroll: [{ overscroll: getOverscroll() }],\n            /**\n             * Overscroll Behavior X\n             * @see https://tailwindcss.com/docs/overscroll-behavior\n             */\n            'overscroll-x': [{ 'overscroll-x': getOverscroll() }],\n            /**\n             * Overscroll Behavior Y\n             * @see https://tailwindcss.com/docs/overscroll-behavior\n             */\n            'overscroll-y': [{ 'overscroll-y': getOverscroll() }],\n            /**\n             * Position\n             * @see https://tailwindcss.com/docs/position\n             */\n            position: ['static', 'fixed', 'absolute', 'relative', 'sticky'],\n            /**\n             * Top / Right / Bottom / Left\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            inset: [{ inset: [inset] }],\n            /**\n             * Right / Left\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            'inset-x': [{ 'inset-x': [inset] }],\n            /**\n             * Top / Bottom\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            'inset-y': [{ 'inset-y': [inset] }],\n            /**\n             * Top\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            top: [{ top: [inset] }],\n            /**\n             * Right\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            right: [{ right: [inset] }],\n            /**\n             * Bottom\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            bottom: [{ bottom: [inset] }],\n            /**\n             * Left\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            left: [{ left: [inset] }],\n            /**\n             * Visibility\n             * @see https://tailwindcss.com/docs/visibility\n             */\n            visibility: ['visible', 'invisible'],\n            /**\n             * Z-Index\n             * @see https://tailwindcss.com/docs/z-index\n             */\n            z: [{ z: [isLength] }],\n            // Flexbox and Grid\n            /**\n             * Flex Basis\n             * @see https://tailwindcss.com/docs/flex-basis\n             */\n            basis: [{ basis: [spacing] }],\n            /**\n             * Flex Direction\n             * @see https://tailwindcss.com/docs/flex-direction\n             */\n            'flex-direction': [{ flex: ['row', 'row-reverse', 'col', 'col-reverse'] }],\n            /**\n             * Flex Wrap\n             * @see https://tailwindcss.com/docs/flex-wrap\n             */\n            'flex-wrap': [{ flex: ['wrap', 'wrap-reverse', 'nowrap'] }],\n            /**\n             * Flex\n             * @see https://tailwindcss.com/docs/flex\n             */\n            flex: [{ flex: ['1', 'auto', 'initial', 'none', isArbitraryValue] }],\n            /**\n             * Flex Grow\n             * @see https://tailwindcss.com/docs/flex-grow\n             */\n            grow: [{ grow: getZeroAndEmpty() }],\n            /**\n             * Flex Shrink\n             * @see https://tailwindcss.com/docs/flex-shrink\n             */\n            shrink: [{ shrink: getZeroAndEmpty() }],\n            /**\n             * Order\n             * @see https://tailwindcss.com/docs/order\n             */\n            order: [{ order: ['first', 'last', 'none', isInteger] }],\n            /**\n             * Grid Template Columns\n             * @see https://tailwindcss.com/docs/grid-template-columns\n             */\n            'grid-cols': [{ 'grid-cols': [isAny] }],\n            /**\n             * Grid Column Start / End\n             * @see https://tailwindcss.com/docs/grid-column\n             */\n            'col-start-end': [{ col: ['auto', { span: [isInteger] }] }],\n            /**\n             * Grid Column Start\n             * @see https://tailwindcss.com/docs/grid-column\n             */\n            'col-start': [{ 'col-start': getIntegerWithAuto() }],\n            /**\n             * Grid Column End\n             * @see https://tailwindcss.com/docs/grid-column\n             */\n            'col-end': [{ 'col-end': getIntegerWithAuto() }],\n            /**\n             * Grid Template Rows\n             * @see https://tailwindcss.com/docs/grid-template-rows\n             */\n            'grid-rows': [{ 'grid-rows': [isAny] }],\n            /**\n             * Grid Row Start / End\n             * @see https://tailwindcss.com/docs/grid-row\n             */\n            'row-start-end': [{ row: ['auto', { span: [isInteger] }] }],\n            /**\n             * Grid Row Start\n             * @see https://tailwindcss.com/docs/grid-row\n             */\n            'row-start': [{ 'row-start': getIntegerWithAuto() }],\n            /**\n             * Grid Row End\n             * @see https://tailwindcss.com/docs/grid-row\n             */\n            'row-end': [{ 'row-end': getIntegerWithAuto() }],\n            /**\n             * Grid Auto Flow\n             * @see https://tailwindcss.com/docs/grid-auto-flow\n             */\n            'grid-flow': [{ 'grid-flow': ['row', 'col', 'row-dense', 'col-dense'] }],\n            /**\n             * Grid Auto Columns\n             * @see https://tailwindcss.com/docs/grid-auto-columns\n             */\n            'auto-cols': [{ 'auto-cols': ['auto', 'min', 'max', 'fr', isArbitraryValue] }],\n            /**\n             * Grid Auto Rows\n             * @see https://tailwindcss.com/docs/grid-auto-rows\n             */\n            'auto-rows': [{ 'auto-rows': ['auto', 'min', 'max', 'fr', isArbitraryValue] }],\n            /**\n             * Gap\n             * @see https://tailwindcss.com/docs/gap\n             */\n            gap: [{ gap: [gap] }],\n            /**\n             * Gap X\n             * @see https://tailwindcss.com/docs/gap\n             */\n            'gap-x': [{ 'gap-x': [gap] }],\n            /**\n             * Gap Y\n             * @see https://tailwindcss.com/docs/gap\n             */\n            'gap-y': [{ 'gap-y': [gap] }],\n            /**\n             * Justify Content\n             * @see https://tailwindcss.com/docs/justify-content\n             */\n            'justify-content': [{ justify: getAlign() }],\n            /**\n             * Justify Items\n             * @see https://tailwindcss.com/docs/justify-items\n             */\n            'justify-items': [{ 'justify-items': ['start', 'end', 'center', 'stretch'] }],\n            /**\n             * Justify Self\n             * @see https://tailwindcss.com/docs/justify-self\n             */\n            'justify-self': [{ 'justify-self': ['auto', 'start', 'end', 'center', 'stretch'] }],\n            /**\n             * Align Content\n             * @see https://tailwindcss.com/docs/align-content\n             */\n            'align-content': [{ content: getAlign() }],\n            /**\n             * Align Items\n             * @see https://tailwindcss.com/docs/align-items\n             */\n            'align-items': [{ items: ['start', 'end', 'center', 'baseline', 'stretch'] }],\n            /**\n             * Align Self\n             * @see https://tailwindcss.com/docs/align-self\n             */\n            'align-self': [{ self: ['auto', 'start', 'end', 'center', 'stretch', 'baseline'] }],\n            /**\n             * Place Content\n             * @see https://tailwindcss.com/docs/place-content\n             */\n            'place-content': [{ 'place-content': [...getAlign(), 'stretch'] }],\n            /**\n             * Place Items\n             * @see https://tailwindcss.com/docs/place-items\n             */\n            'place-items': [{ 'place-items': ['start', 'end', 'center', 'stretch'] }],\n            /**\n             * Place Self\n             * @see https://tailwindcss.com/docs/place-self\n             */\n            'place-self': [{ 'place-self': ['auto', 'start', 'end', 'center', 'stretch'] }],\n            // Spacing\n            /**\n             * Padding\n             * @see https://tailwindcss.com/docs/padding\n             */\n            p: [{ p: [padding] }],\n            /**\n             * Padding X\n             * @see https://tailwindcss.com/docs/padding\n             */\n            px: [{ px: [padding] }],\n            /**\n             * Padding Y\n             * @see https://tailwindcss.com/docs/padding\n             */\n            py: [{ py: [padding] }],\n            /**\n             * Padding Top\n             * @see https://tailwindcss.com/docs/padding\n             */\n            pt: [{ pt: [padding] }],\n            /**\n             * Padding Right\n             * @see https://tailwindcss.com/docs/padding\n             */\n            pr: [{ pr: [padding] }],\n            /**\n             * Padding Bottom\n             * @see https://tailwindcss.com/docs/padding\n             */\n            pb: [{ pb: [padding] }],\n            /**\n             * Padding Left\n             * @see https://tailwindcss.com/docs/padding\n             */\n            pl: [{ pl: [padding] }],\n            /**\n             * Margin\n             * @see https://tailwindcss.com/docs/margin\n             */\n            m: [{ m: [margin] }],\n            /**\n             * Margin X\n             * @see https://tailwindcss.com/docs/margin\n             */\n            mx: [{ mx: [margin] }],\n            /**\n             * Margin Y\n             * @see https://tailwindcss.com/docs/margin\n             */\n            my: [{ my: [margin] }],\n            /**\n             * Margin Top\n             * @see https://tailwindcss.com/docs/margin\n             */\n            mt: [{ mt: [margin] }],\n            /**\n             * Margin Right\n             * @see https://tailwindcss.com/docs/margin\n             */\n            mr: [{ mr: [margin] }],\n            /**\n             * Margin Bottom\n             * @see https://tailwindcss.com/docs/margin\n             */\n            mb: [{ mb: [margin] }],\n            /**\n             * Margin Left\n             * @see https://tailwindcss.com/docs/margin\n             */\n            ml: [{ ml: [margin] }],\n            /**\n             * Space Between X\n             * @see https://tailwindcss.com/docs/space\n             */\n            'space-x': [{ 'space-x': [space] }],\n            /**\n             * Space Between X Reverse\n             * @see https://tailwindcss.com/docs/space\n             */\n            'space-x-reverse': ['space-x-reverse'],\n            /**\n             * Space Between Y\n             * @see https://tailwindcss.com/docs/space\n             */\n            'space-y': [{ 'space-y': [space] }],\n            /**\n             * Space Between Y Reverse\n             * @see https://tailwindcss.com/docs/space\n             */\n            'space-y-reverse': ['space-y-reverse'],\n            // Sizing\n            /**\n             * Width\n             * @see https://tailwindcss.com/docs/width\n             */\n            w: [{ w: ['auto', 'min', 'max', spacing] }],\n            /**\n             * Min-Width\n             * @see https://tailwindcss.com/docs/min-width\n             */\n            'min-w': [{ 'min-w': ['min', 'max', 'fit', isLength] }],\n            /**\n             * Max-Width\n             * @see https://tailwindcss.com/docs/max-width\n             */\n            'max-w': [\n                {\n                    'max-w': [\n                        '0',\n                        'none',\n                        'full',\n                        'min',\n                        'max',\n                        'fit',\n                        'prose',\n                        { screen: [isTshirtSize] },\n                        isTshirtSize,\n                        isArbitraryLength,\n                    ],\n                },\n            ],\n            /**\n             * Height\n             * @see https://tailwindcss.com/docs/height\n             */\n            h: [{ h: getSpacingWithAuto() }],\n            /**\n             * Min-Height\n             * @see https://tailwindcss.com/docs/min-height\n             */\n            'min-h': [{ 'min-h': ['min', 'max', 'fit', isLength] }],\n            /**\n             * Max-Height\n             * @see https://tailwindcss.com/docs/max-height\n             */\n            'max-h': [{ 'max-h': [spacing, 'min', 'max', 'fit'] }],\n            // Typography\n            /**\n             * Font Size\n             * @see https://tailwindcss.com/docs/font-size\n             */\n            'font-size': [{ text: ['base', isTshirtSize, isArbitraryLength] }],\n            /**\n             * Font Smoothing\n             * @see https://tailwindcss.com/docs/font-smoothing\n             */\n            'font-smoothing': ['antialiased', 'subpixel-antialiased'],\n            /**\n             * Font Style\n             * @see https://tailwindcss.com/docs/font-style\n             */\n            'font-style': ['italic', 'not-italic'],\n            /**\n             * Font Weight\n             * @see https://tailwindcss.com/docs/font-weight\n             */\n            'font-weight': [\n                {\n                    font: [\n                        'thin',\n                        'extralight',\n                        'light',\n                        'normal',\n                        'medium',\n                        'semibold',\n                        'bold',\n                        'extrabold',\n                        'black',\n                        isArbitraryWeight,\n                    ],\n                },\n            ],\n            /**\n             * Font Family\n             * @see https://tailwindcss.com/docs/font-family\n             */\n            'font-family': [{ font: [isAny] }],\n            /**\n             * Font Variant Numeric\n             * @see https://tailwindcss.com/docs/font-variant-numeric\n             */\n            'fvn-normal': ['normal-nums'],\n            /**\n             * Font Variant Numeric\n             * @see https://tailwindcss.com/docs/font-variant-numeric\n             */\n            'fvn-ordinal': ['ordinal'],\n            /**\n             * Font Variant Numeric\n             * @see https://tailwindcss.com/docs/font-variant-numeric\n             */\n            'fvn-slashed-zero': ['slashed-zero'],\n            /**\n             * Font Variant Numeric\n             * @see https://tailwindcss.com/docs/font-variant-numeric\n             */\n            'fvn-figure': ['lining-nums', 'oldstyle-nums'],\n            /**\n             * Font Variant Numeric\n             * @see https://tailwindcss.com/docs/font-variant-numeric\n             */\n            'fvn-spacing': ['proportional-nums', 'tabular-nums'],\n            /**\n             * Font Variant Numeric\n             * @see https://tailwindcss.com/docs/font-variant-numeric\n             */\n            'fvn-fraction': ['diagonal-fractions', 'stacked-fractons'],\n            /**\n             * Letter Spacing\n             * @see https://tailwindcss.com/docs/letter-spacing\n             */\n            tracking: [\n                {\n                    tracking: [\n                        'tighter',\n                        'tight',\n                        'normal',\n                        'wide',\n                        'wider',\n                        'widest',\n                        isArbitraryLength,\n                    ],\n                },\n            ],\n            /**\n             * Line Height\n             * @see https://tailwindcss.com/docs/line-height\n             */\n            leading: [\n                { leading: ['none', 'tight', 'snug', 'normal', 'relaxed', 'loose', isLength] },\n            ],\n            /**\n             * List Style Type\n             * @see https://tailwindcss.com/docs/list-style-type\n             */\n            'list-style-type': [{ list: ['none', 'disc', 'decimal', isArbitraryValue] }],\n            /**\n             * List Style Position\n             * @see https://tailwindcss.com/docs/list-style-position\n             */\n            'list-style-position': [{ list: ['inside', 'outside'] }],\n            /**\n             * Placeholder Color\n             * @deprecated since Tailwind CSS v3.0.0\n             * @see https://tailwindcss.com/docs/placeholder-color\n             */\n            'placeholder-color': [{ placeholder: [colors] }],\n            /**\n             * Placeholder Opacity\n             * @see https://tailwindcss.com/docs/placeholder-opacity\n             */\n            'placeholder-opacity': [{ 'placeholder-opacity': [opacity] }],\n            /**\n             * Text Alignment\n             * @see https://tailwindcss.com/docs/text-align\n             */\n            'text-alignment': [{ text: ['left', 'center', 'right', 'justify'] }],\n            /**\n             * Text Color\n             * @see https://tailwindcss.com/docs/text-color\n             */\n            'text-color': [{ text: [colors] }],\n            /**\n             * Text Opacity\n             * @see https://tailwindcss.com/docs/text-opacity\n             */\n            'text-opacity': [{ 'text-opacity': [opacity] }],\n            /**\n             * Text Decoration\n             * @see https://tailwindcss.com/docs/text-decoration\n             */\n            'text-decoration': ['underline', 'overline', 'line-through', 'no-underline'],\n            /**\n             * Text Decoration Style\n             * @see https://tailwindcss.com/docs/text-decoration-style\n             */\n            'text-decoration-style': [{ decoration: [...getLineStyles(), 'wavy'] }],\n            /**\n             * Text Decoration Thickness\n             * @see https://tailwindcss.com/docs/text-decoration-thickness\n             */\n            'text-decoration-thickness': [{ decoration: ['auto', 'from-font', isLength] }],\n            /**\n             * Text Underline Offset\n             * @see https://tailwindcss.com/docs/text-underline-offset\n             */\n            'underline-offset': [{ 'underline-offset': ['auto', isLength] }],\n            /**\n             * Text Decoration Color\n             * @see https://tailwindcss.com/docs/text-decoration-color\n             */\n            'text-decoration-color': [{ decoration: [colors] }],\n            /**\n             * Text Transform\n             * @see https://tailwindcss.com/docs/text-transform\n             */\n            'text-transform': ['uppercase', 'lowercase', 'capitalize', 'normal-case'],\n            /**\n             * Text Overflow\n             * @see https://tailwindcss.com/docs/text-overflow\n             */\n            'text-overflow': ['truncate', 'text-ellipsis', 'text-clip'],\n            /**\n             * Text Indent\n             * @see https://tailwindcss.com/docs/text-indent\n             */\n            indent: [{ indent: [spacing] }],\n            /**\n             * Vertical Alignment\n             * @see https://tailwindcss.com/docs/vertical-align\n             */\n            'vertical-align': [\n                {\n                    align: [\n                        'baseline',\n                        'top',\n                        'middle',\n                        'bottom',\n                        'text-top',\n                        'text-bottom',\n                        'sub',\n                        'super',\n                        isArbitraryLength,\n                    ],\n                },\n            ],\n            /**\n             * Whitespace\n             * @see https://tailwindcss.com/docs/whitespace\n             */\n            whitespace: [{ whitespace: ['normal', 'nowrap', 'pre', 'pre-line', 'pre-wrap'] }],\n            /**\n             * Word Break\n             * @see https://tailwindcss.com/docs/word-break\n             */\n            break: [{ break: ['normal', 'words', 'all'] }],\n            /**\n             * Content\n             * @see https://tailwindcss.com/docs/content\n             */\n            content: [{ content: ['none', isArbitraryValue] }],\n            // Backgrounds\n            /**\n             * Background Attachment\n             * @see https://tailwindcss.com/docs/background-attachment\n             */\n            'bg-attachment': [{ bg: ['fixed', 'local', 'scroll'] }],\n            /**\n             * Background Clip\n             * @see https://tailwindcss.com/docs/background-clip\n             */\n            'bg-clip': [{ 'bg-clip': ['border', 'padding', 'content', 'text'] }],\n            /**\n             * Background Opacity\n             * @deprecated since Tailwind CSS v3.0.0\n             * @see https://tailwindcss.com/docs/background-opacity\n             */\n            'bg-opacity': [{ 'bg-opacity': [opacity] }],\n            /**\n             * Background Origin\n             * @see https://tailwindcss.com/docs/background-origin\n             */\n            'bg-origin': [{ 'bg-origin': ['border', 'padding', 'content'] }],\n            /**\n             * Background Position\n             * @see https://tailwindcss.com/docs/background-position\n             */\n            'bg-position': [{ bg: [...getPositions(), isArbitraryPosition] }],\n            /**\n             * Background Repeat\n             * @see https://tailwindcss.com/docs/background-repeat\n             */\n            'bg-repeat': [{ bg: ['no-repeat', { repeat: ['', 'x', 'y', 'round', 'space'] }] }],\n            /**\n             * Background Size\n             * @see https://tailwindcss.com/docs/background-size\n             */\n            'bg-size': [{ bg: ['auto', 'cover', 'contain', isArbitrarySize] }],\n            /**\n             * Background Image\n             * @see https://tailwindcss.com/docs/background-image\n             */\n            'bg-image': [\n                {\n                    bg: [\n                        'none',\n                        { 'gradient-to': ['t', 'tr', 'r', 'br', 'b', 'bl', 'l', 'tl'] },\n                        isArbitraryUrl,\n                    ],\n                },\n            ],\n            /**\n             * Background Color\n             * @see https://tailwindcss.com/docs/background-color\n             */\n            'bg-color': [{ bg: [colors] }],\n            /**\n             * Gradient Color Stops From\n             * @see https://tailwindcss.com/docs/gradient-color-stops\n             */\n            'gradient-from': [{ from: [gradientColorStops] }],\n            /**\n             * Gradient Color Stops Via\n             * @see https://tailwindcss.com/docs/gradient-color-stops\n             */\n            'gradient-via': [{ via: [gradientColorStops] }],\n            /**\n             * Gradient Color Stops To\n             * @see https://tailwindcss.com/docs/gradient-color-stops\n             */\n            'gradient-to': [{ to: [gradientColorStops] }],\n            // Borders\n            /**\n             * Border Radius\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            rounded: [{ rounded: [borderRadius] }],\n            /**\n             * Border Radius Top\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-t': [{ 'rounded-t': [borderRadius] }],\n            /**\n             * Border Radius Right\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-r': [{ 'rounded-r': [borderRadius] }],\n            /**\n             * Border Radius Bottom\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-b': [{ 'rounded-b': [borderRadius] }],\n            /**\n             * Border Radius Left\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-l': [{ 'rounded-l': [borderRadius] }],\n            /**\n             * Border Radius Top Left\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-tl': [{ 'rounded-tl': [borderRadius] }],\n            /**\n             * Border Radius Top Right\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-tr': [{ 'rounded-tr': [borderRadius] }],\n            /**\n             * Border Radius Bottom Right\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-br': [{ 'rounded-br': [borderRadius] }],\n            /**\n             * Border Radius Bottom Left\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-bl': [{ 'rounded-bl': [borderRadius] }],\n            /**\n             * Border Width\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w': [{ border: [borderWidth] }],\n            /**\n             * Border Width X\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w-x': [{ 'border-x': [borderWidth] }],\n            /**\n             * Border Width Y\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w-y': [{ 'border-y': [borderWidth] }],\n            /**\n             * Border Width Top\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w-t': [{ 'border-t': [borderWidth] }],\n            /**\n             * Border Width Right\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w-r': [{ 'border-r': [borderWidth] }],\n            /**\n             * Border Width Bottom\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w-b': [{ 'border-b': [borderWidth] }],\n            /**\n             * Border Width Left\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w-l': [{ 'border-l': [borderWidth] }],\n            /**\n             * Border Opacity\n             * @see https://tailwindcss.com/docs/border-opacity\n             */\n            'border-opacity': [{ 'border-opacity': [opacity] }],\n            /**\n             * Border Style\n             * @see https://tailwindcss.com/docs/border-style\n             */\n            'border-style': [{ border: [...getLineStyles(), 'hidden'] }],\n            /**\n             * Divide Width X\n             * @see https://tailwindcss.com/docs/divide-width\n             */\n            'divide-x': [{ 'divide-x': [borderWidth] }],\n            /**\n             * Divide Width X Reverse\n             * @see https://tailwindcss.com/docs/divide-width\n             */\n            'divide-x-reverse': ['divide-x-reverse'],\n            /**\n             * Divide Width Y\n             * @see https://tailwindcss.com/docs/divide-width\n             */\n            'divide-y': [{ 'divide-y': [borderWidth] }],\n            /**\n             * Divide Width Y Reverse\n             * @see https://tailwindcss.com/docs/divide-width\n             */\n            'divide-y-reverse': ['divide-y-reverse'],\n            /**\n             * Divide Opacity\n             * @see https://tailwindcss.com/docs/divide-opacity\n             */\n            'divide-opacity': [{ 'divide-opacity': [opacity] }],\n            /**\n             * Divide Style\n             * @see https://tailwindcss.com/docs/divide-style\n             */\n            'divide-style': [{ divide: getLineStyles() }],\n            /**\n             * Border Color\n             * @see https://tailwindcss.com/docs/border-color\n             */\n            'border-color': [{ border: [borderColor] }],\n            /**\n             * Border Color X\n             * @see https://tailwindcss.com/docs/border-color\n             */\n            'border-color-x': [{ 'border-x': [borderColor] }],\n            /**\n             * Border Color Y\n             * @see https://tailwindcss.com/docs/border-color\n             */\n            'border-color-y': [{ 'border-y': [borderColor] }],\n            /**\n             * Border Color Top\n             * @see https://tailwindcss.com/docs/border-color\n             */\n            'border-color-t': [{ 'border-t': [borderColor] }],\n            /**\n             * Border Color Right\n             * @see https://tailwindcss.com/docs/border-color\n             */\n            'border-color-r': [{ 'border-r': [borderColor] }],\n            /**\n             * Border Color Bottom\n             * @see https://tailwindcss.com/docs/border-color\n             */\n            'border-color-b': [{ 'border-b': [borderColor] }],\n            /**\n             * Border Color Left\n             * @see https://tailwindcss.com/docs/border-color\n             */\n            'border-color-l': [{ 'border-l': [borderColor] }],\n            /**\n             * Divide Color\n             * @see https://tailwindcss.com/docs/divide-color\n             */\n            'divide-color': [{ divide: [borderColor] }],\n            /**\n             * Outline Style\n             * @see https://tailwindcss.com/docs/outline-style\n             */\n            'outline-style': [{ outline: ['', ...getLineStyles(), 'hidden'] }],\n            /**\n             * Outline Offset\n             * @see https://tailwindcss.com/docs/outline-offset\n             */\n            'outline-offset': [{ 'outline-offset': [isLength] }],\n            /**\n             * Outline Width\n             * @see https://tailwindcss.com/docs/outline-width\n             */\n            'outline-w': [{ outline: [isLength] }],\n            /**\n             * Outline Color\n             * @see https://tailwindcss.com/docs/outline-color\n             */\n            'outline-color': [{ outline: [colors] }],\n            /**\n             * Ring Width\n             * @see https://tailwindcss.com/docs/ring-width\n             */\n            'ring-w': [{ ring: getLengthWithEmpty() }],\n            /**\n             * Ring Width Inset\n             * @see https://tailwindcss.com/docs/ring-width\n             */\n            'ring-w-inset': ['ring-inset'],\n            /**\n             * Ring Color\n             * @see https://tailwindcss.com/docs/ring-color\n             */\n            'ring-color': [{ ring: [colors] }],\n            /**\n             * Ring Opacity\n             * @see https://tailwindcss.com/docs/ring-opacity\n             */\n            'ring-opacity': [{ 'ring-opacity': [opacity] }],\n            /**\n             * Ring Offset Width\n             * @see https://tailwindcss.com/docs/ring-offset-width\n             */\n            'ring-offset-w': [{ 'ring-offset': [isLength] }],\n            /**\n             * Ring Offset Color\n             * @see https://tailwindcss.com/docs/ring-offset-color\n             */\n            'ring-offset-color': [{ 'ring-offset': [colors] }],\n            // Effects\n            /**\n             * Box Shadow\n             * @see https://tailwindcss.com/docs/box-shadow\n             */\n            shadow: [{ shadow: ['', 'inner', 'none', isTshirtSize, isArbitraryShadow] }],\n            /**\n             * Box Shadow Color\n             * @see https://tailwindcss.com/docs/box-shadow-color\n             */\n            'shadow-color': [{ shadow: [isAny] }],\n            /**\n             * Opacity\n             * @see https://tailwindcss.com/docs/opacity\n             */\n            opacity: [{ opacity: [opacity] }],\n            /**\n             * Mix Beldn Mode\n             * @see https://tailwindcss.com/docs/mix-blend-mode\n             */\n            'mix-blend': [{ 'mix-blend': getBlendModes() }],\n            /**\n             * Background Blend Mode\n             * @see https://tailwindcss.com/docs/background-blend-mode\n             */\n            'bg-blend': [{ 'bg-blend': getBlendModes() }],\n            // Filters\n            /**\n             * Filter\n             * @deprecated since Tailwind CSS v3.0.0\n             * @see https://tailwindcss.com/docs/filter\n             */\n            filter: [{ filter: ['', 'none'] }],\n            /**\n             * Blur\n             * @see https://tailwindcss.com/docs/blur\n             */\n            blur: [{ blur: [blur] }],\n            /**\n             * Brightness\n             * @see https://tailwindcss.com/docs/brightness\n             */\n            brightness: [{ brightness: [brightness] }],\n            /**\n             * Contrast\n             * @see https://tailwindcss.com/docs/contrast\n             */\n            contrast: [{ contrast: [contrast] }],\n            /**\n             * Drop Shadow\n             * @see https://tailwindcss.com/docs/drop-shadow\n             */\n            'drop-shadow': [{ 'drop-shadow': ['', 'none', isTshirtSize, isArbitraryValue] }],\n            /**\n             * Grayscale\n             * @see https://tailwindcss.com/docs/grayscale\n             */\n            grayscale: [{ grayscale: [grayscale] }],\n            /**\n             * Hue Rotate\n             * @see https://tailwindcss.com/docs/hue-rotate\n             */\n            'hue-rotate': [{ 'hue-rotate': [hueRotate] }],\n            /**\n             * Invert\n             * @see https://tailwindcss.com/docs/invert\n             */\n            invert: [{ invert: [invert] }],\n            /**\n             * Saturate\n             * @see https://tailwindcss.com/docs/saturate\n             */\n            saturate: [{ saturate: [saturate] }],\n            /**\n             * Sepia\n             * @see https://tailwindcss.com/docs/sepia\n             */\n            sepia: [{ sepia: [sepia] }],\n            /**\n             * Backdrop Filter\n             * @deprecated since Tailwind CSS v3.0.0\n             * @see https://tailwindcss.com/docs/backdrop-filter\n             */\n            'backdrop-filter': [{ 'backdrop-filter': ['', 'none'] }],\n            /**\n             * Backdrop Blur\n             * @see https://tailwindcss.com/docs/backdrop-blur\n             */\n            'backdrop-blur': [{ 'backdrop-blur': [blur] }],\n            /**\n             * Backdrop Brightness\n             * @see https://tailwindcss.com/docs/backdrop-brightness\n             */\n            'backdrop-brightness': [{ 'backdrop-brightness': [brightness] }],\n            /**\n             * Backdrop Contrast\n             * @see https://tailwindcss.com/docs/backdrop-contrast\n             */\n            'backdrop-contrast': [{ 'backdrop-contrast': [contrast] }],\n            /**\n             * Backdrop Grayscale\n             * @see https://tailwindcss.com/docs/backdrop-grayscale\n             */\n            'backdrop-grayscale': [{ 'backdrop-grayscale': [grayscale] }],\n            /**\n             * Backdrop Hue Rotate\n             * @see https://tailwindcss.com/docs/backdrop-hue-rotate\n             */\n            'backdrop-hue-rotate': [{ 'backdrop-hue-rotate': [hueRotate] }],\n            /**\n             * Backdrop Invert\n             * @see https://tailwindcss.com/docs/backdrop-invert\n             */\n            'backdrop-invert': [{ 'backdrop-invert': [invert] }],\n            /**\n             * Backdrop Opacity\n             * @see https://tailwindcss.com/docs/backdrop-opacity\n             */\n            'backdrop-opacity': [{ 'backdrop-opacity': [opacity] }],\n            /**\n             * Backdrop Saturate\n             * @see https://tailwindcss.com/docs/backdrop-saturate\n             */\n            'backdrop-saturate': [{ 'backdrop-saturate': [saturate] }],\n            /**\n             * Backdrop Sepia\n             * @see https://tailwindcss.com/docs/backdrop-sepia\n             */\n            'backdrop-sepia': [{ 'backdrop-sepia': [sepia] }],\n            // Tables\n            /**\n             * Border Collapse\n             * @see https://tailwindcss.com/docs/border-collapse\n             */\n            'border-collapse': [{ border: ['collapse', 'separate'] }],\n            /**\n             * Table Layout\n             * @see https://tailwindcss.com/docs/table-layout\n             */\n            'table-layout': [{ table: ['auto', 'fixed'] }],\n            // Transitions and Animation\n            /**\n             * Tranisition Property\n             * @see https://tailwindcss.com/docs/transition-property\n             */\n            transition: [\n                {\n                    transition: [\n                        'none',\n                        'all',\n                        '',\n                        'colors',\n                        'opacity',\n                        'shadow',\n                        'transform',\n                        isArbitraryValue,\n                    ],\n                },\n            ],\n            /**\n             * Transition Duration\n             * @see https://tailwindcss.com/docs/transition-duration\n             */\n            duration: [{ duration: [isInteger] }],\n            /**\n             * Transition Timing Function\n             * @see https://tailwindcss.com/docs/transition-timing-function\n             */\n            ease: [{ ease: ['linear', 'in', 'out', 'in-out', isArbitraryValue] }],\n            /**\n             * Transition Delay\n             * @see https://tailwindcss.com/docs/transition-delay\n             */\n            delay: [{ delay: [isInteger] }],\n            /**\n             * Animation\n             * @see https://tailwindcss.com/docs/animation\n             */\n            animate: [{ animate: ['none', 'spin', 'ping', 'pulse', 'bounce', isArbitraryValue] }],\n            // Transforms\n            /**\n             * Transform\n             * @see https://tailwindcss.com/docs/transform\n             */\n            transform: [{ transform: ['', 'gpu', 'none'] }],\n            /**\n             * Scale\n             * @see https://tailwindcss.com/docs/scale\n             */\n            scale: [{ scale: [scale] }],\n            /**\n             * Scale X\n             * @see https://tailwindcss.com/docs/scale\n             */\n            'scale-x': [{ 'scale-x': [scale] }],\n            /**\n             * Scale Y\n             * @see https://tailwindcss.com/docs/scale\n             */\n            'scale-y': [{ 'scale-y': [scale] }],\n            /**\n             * Rotate\n             * @see https://tailwindcss.com/docs/rotate\n             */\n            rotate: [{ rotate: [isInteger, isArbitraryValue] }],\n            /**\n             * Translate X\n             * @see https://tailwindcss.com/docs/translate\n             */\n            'translate-x': [{ 'translate-x': [translate] }],\n            /**\n             * Translate Y\n             * @see https://tailwindcss.com/docs/translate\n             */\n            'translate-y': [{ 'translate-y': [translate] }],\n            /**\n             * Skew X\n             * @see https://tailwindcss.com/docs/skew\n             */\n            'skew-x': [{ 'skew-x': [skew] }],\n            /**\n             * Skew Y\n             * @see https://tailwindcss.com/docs/skew\n             */\n            'skew-y': [{ 'skew-y': [skew] }],\n            /**\n             * Transform Origin\n             * @see https://tailwindcss.com/docs/transform-origin\n             */\n            'transform-origin': [\n                {\n                    origin: [\n                        'center',\n                        'top',\n                        'top-right',\n                        'right',\n                        'bottom-right',\n                        'bottom',\n                        'bottom-left',\n                        'left',\n                        'top-left',\n                        isArbitraryValue,\n                    ],\n                },\n            ],\n            // Interactivity\n            /**\n             * Accent Color\n             * @see https://tailwindcss.com/docs/accent-color\n             */\n            accent: [{ accent: ['auto', colors] }],\n            /**\n             * Appearance\n             * @see https://tailwindcss.com/docs/appearance\n             */\n            appearance: ['appearance-none'],\n            /**\n             * Cursor\n             * @see https://tailwindcss.com/docs/cursor\n             */\n            cursor: [\n                {\n                    cursor: [\n                        'auto',\n                        'default',\n                        'pointer',\n                        'wait',\n                        'text',\n                        'move',\n                        'help',\n                        'not-allowed',\n                        'none',\n                        'context-menu',\n                        'progress',\n                        'cell',\n                        'crosshair',\n                        'vertical-text',\n                        'alias',\n                        'copy',\n                        'no-drop',\n                        'grab',\n                        'grabbing',\n                        'all-scroll',\n                        'col-resize',\n                        'row-resize',\n                        'n-resize',\n                        'e-resize',\n                        's-resize',\n                        'w-resize',\n                        'ne-resize',\n                        'nw-resize',\n                        'se-resize',\n                        'sw-resize',\n                        'ew-resize',\n                        'ns-resize',\n                        'nesw-resize',\n                        'nwse-resize',\n                        'zoom-in',\n                        'zoom-out',\n                        isArbitraryValue,\n                    ],\n                },\n            ],\n            /**\n             * Caret Color\n             * @see https://tailwindcss.com/docs/just-in-time-mode#caret-color-utilities\n             */\n            'caret-color': [{ caret: [colors] }],\n            /**\n             * Pointer Events\n             * @see https://tailwindcss.com/docs/pointer-events\n             */\n            'pointer-events': [{ 'pointer-events': ['none', 'auto'] }],\n            /**\n             * Resize\n             * @see https://tailwindcss.com/docs/resize\n             */\n            resize: [{ resize: ['none', 'y', 'x', ''] }],\n            /**\n             * Scroll Behavior\n             * @see https://tailwindcss.com/docs/scroll-behavior\n             */\n            'scroll-behavior': [{ scroll: ['auto', 'smooth'] }],\n            /**\n             * Scroll Margin\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-m': [{ 'scroll-m': [spacing] }],\n            /**\n             * Scroll Margin X\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-mx': [{ 'scroll-mx': [spacing] }],\n            /**\n             * Scroll Margin Y\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-my': [{ 'scroll-my': [spacing] }],\n            /**\n             * Scroll Margin Top\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-mt': [{ 'scroll-mt': [spacing] }],\n            /**\n             * Scroll Margin Right\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-mr': [{ 'scroll-mr': [spacing] }],\n            /**\n             * Scroll Margin Bottom\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-mb': [{ 'scroll-mb': [spacing] }],\n            /**\n             * Scroll Margin Left\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-ml': [{ 'scroll-ml': [spacing] }],\n            /**\n             * Scroll Padding\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-p': [{ 'scroll-p': [spacing] }],\n            /**\n             * Scroll Padding X\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-px': [{ 'scroll-px': [spacing] }],\n            /**\n             * Scroll Padding Y\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-py': [{ 'scroll-py': [spacing] }],\n            /**\n             * Scroll Padding Top\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-pt': [{ 'scroll-pt': [spacing] }],\n            /**\n             * Scroll Padding Right\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-pr': [{ 'scroll-pr': [spacing] }],\n            /**\n             * Scroll Padding Bottom\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-pb': [{ 'scroll-pb': [spacing] }],\n            /**\n             * Scroll Padding Left\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-pl': [{ 'scroll-pl': [spacing] }],\n            /**\n             * Scroll Snap Align\n             * @see https://tailwindcss.com/docs/scroll-snap-align\n             */\n            'snap-align': [{ snap: ['start', 'end', 'center', 'align-none'] }],\n            /**\n             * Scroll Snap Stop\n             * @see https://tailwindcss.com/docs/scroll-snap-stop\n             */\n            'snap-stop': [{ snap: ['normal', 'always'] }],\n            /**\n             * Scroll Snap Type\n             * @see https://tailwindcss.com/docs/scroll-snap-type\n             */\n            'snap-type': [{ snap: ['none', 'x', 'y', 'both'] }],\n            /**\n             * Scroll Snap Type Strictness\n             * @see https://tailwindcss.com/docs/scroll-snap-type\n             */\n            'snap-strictness': [{ snap: ['mandatory', 'proximity'] }],\n            /**\n             * Touch Action\n             * @see https://tailwindcss.com/docs/touch-action\n             */\n            touch: [\n                {\n                    touch: [\n                        'auto',\n                        'none',\n                        'pinch-zoom',\n                        'manipulation',\n                        { pan: ['x', 'left', 'right', 'y', 'up', 'down'] },\n                    ],\n                },\n            ],\n            /**\n             * User Select\n             * @see https://tailwindcss.com/docs/user-select\n             */\n            select: [{ select: ['none', 'text', 'all', 'auto'] }],\n            /**\n             * Will Change\n             * @see https://tailwindcss.com/docs/will-change\n             */\n            'will-change': [\n                { 'will-change': ['auto', 'scroll', 'contents', 'transform', isArbitraryValue] },\n            ],\n            // SVG\n            /**\n             * Fill\n             * @see https://tailwindcss.com/docs/fill\n             */\n            fill: [{ fill: [colors] }],\n            /**\n             * Stroke Width\n             * @see https://tailwindcss.com/docs/stroke-width\n             */\n            'stroke-w': [{ stroke: [isLength] }],\n            /**\n             * Stroke\n             * @see https://tailwindcss.com/docs/stroke\n             */\n            stroke: [{ stroke: [colors] }],\n            // Accessibility\n            /**\n             * Screen Readers\n             * @see https://tailwindcss.com/docs/screen-readers\n             */\n            sr: ['sr-only', 'not-sr-only'],\n        },\n        conflictingClassGroups: {\n            overflow: ['overflow-x', 'overflow-y'],\n            overscroll: ['overscroll-x', 'overscroll-y'],\n            inset: ['inset-x', 'inset-y', 'top', 'right', 'bottom', 'left'],\n            'inset-x': ['right', 'left'],\n            'inset-y': ['top', 'bottom'],\n            flex: ['basis', 'grow', 'shrink'],\n            'col-start-end': ['col-start', 'col-end'],\n            'row-start-end': ['row-start', 'row-end'],\n            gap: ['gap-x', 'gap-y'],\n            p: ['px', 'py', 'pt', 'pr', 'pb', 'pl'],\n            px: ['pr', 'pl'],\n            py: ['pt', 'pb'],\n            m: ['mx', 'my', 'mt', 'mr', 'mb', 'ml'],\n            mx: ['mr', 'ml'],\n            my: ['mt', 'mb'],\n            'font-size': ['leading'],\n            'fvn-normal': [\n                'fvn-ordinal',\n                'fvn-slashed-zero',\n                'fvn-figure',\n                'fvn-spacing',\n                'fvn-fraction',\n            ],\n            'fvn-ordinal': ['fvn-normal'],\n            'fvn-slashed-zero': ['fvn-normal'],\n            'fvn-figure': ['fvn-normal'],\n            'fvn-spacing': ['fvn-normal'],\n            'fvn-fraction': ['fvn-normal'],\n            rounded: [\n                'rounded-t',\n                'rounded-r',\n                'rounded-b',\n                'rounded-l',\n                'rounded-tl',\n                'rounded-tr',\n                'rounded-br',\n                'rounded-bl',\n            ],\n            'rounded-t': ['rounded-tl', 'rounded-tr'],\n            'rounded-r': ['rounded-tr', 'rounded-br'],\n            'rounded-b': ['rounded-br', 'rounded-bl'],\n            'rounded-l': ['rounded-tl', 'rounded-bl'],\n            'border-w': ['border-w-t', 'border-w-r', 'border-w-b', 'border-w-l'],\n            'border-w-x': ['border-w-r', 'border-w-l'],\n            'border-w-y': ['border-w-t', 'border-w-b'],\n            'border-color': [\n                'border-color-t',\n                'border-color-r',\n                'border-color-b',\n                'border-color-l',\n            ],\n            'border-color-x': ['border-color-r', 'border-color-l'],\n            'border-color-y': ['border-color-t', 'border-color-b'],\n            'scroll-m': [\n                'scroll-mx',\n                'scroll-my',\n                'scroll-mt',\n                'scroll-mr',\n                'scroll-mb',\n                'scroll-ml',\n            ],\n            'scroll-mx': ['scroll-mr', 'scroll-ml'],\n            'scroll-my': ['scroll-mt', 'scroll-mb'],\n            'scroll-p': [\n                'scroll-px',\n                'scroll-py',\n                'scroll-pt',\n                'scroll-pr',\n                'scroll-pb',\n                'scroll-pl',\n            ],\n            'scroll-px': ['scroll-pr', 'scroll-pl'],\n            'scroll-py': ['scroll-pt', 'scroll-pb'],\n        },\n    } as const\n}\n","import { createTailwindMerge } from './create-tailwind-merge'\nimport { getDefaultConfig } from './default-config'\n\nexport const twMerge = createTailwindMerge(getDefaultConfig)\n","import { Config } from './types'\n\n/**\n * @param baseConfig Config where other config will be merged into. This object will be mutated.\n * @param configExtension Partial config to merge into the `baseConfig`.\n */\nexport function mergeConfigs(baseConfig: Config, configExtension: Partial<Config>) {\n    for (const key in configExtension) {\n        mergePropertyRecursively(baseConfig as any, key, configExtension[key as keyof Config])\n    }\n\n    return baseConfig\n}\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty\nconst overrideTypes = new Set(['string', 'number', 'boolean'])\n\nfunction mergePropertyRecursively(\n    baseObject: Record<string, unknown>,\n    mergeKey: string,\n    mergeValue: unknown\n) {\n    if (\n        !hasOwnProperty.call(baseObject, mergeKey) ||\n        overrideTypes.has(typeof mergeValue) ||\n        mergeValue === null\n    ) {\n        baseObject[mergeKey] = mergeValue\n        return\n    }\n\n    if (Array.isArray(mergeValue) && Array.isArray(baseObject[mergeKey])) {\n        baseObject[mergeKey] = (baseObject[mergeKey] as unknown[]).concat(mergeValue)\n        return\n    }\n\n    if (typeof mergeValue === 'object' && typeof baseObject[mergeKey] === 'object') {\n        if (baseObject[mergeKey] === null) {\n            baseObject[mergeKey] = mergeValue\n            return\n        }\n\n        for (const nextKey in mergeValue) {\n            mergePropertyRecursively(\n                baseObject[mergeKey] as Record<string, unknown>,\n                nextKey,\n                mergeValue[nextKey as keyof object]\n            )\n        }\n    }\n}\n","import { createTailwindMerge } from './create-tailwind-merge'\nimport { getDefaultConfig } from './default-config'\nimport { mergeConfigs } from './merge-configs'\nimport { Config } from './types'\n\ntype CreateConfigSubsequent = (config: Config) => Config\n\nexport function extendTailwindMerge(\n    configExtension: Partial<Config> | CreateConfigSubsequent,\n    ...createConfig: CreateConfigSubsequent[]\n) {\n    return typeof configExtension === 'function'\n        ? createTailwindMerge(getDefaultConfig, configExtension, ...createConfig)\n        : createTailwindMerge(\n              () => mergeConfigs(getDefaultConfig(), configExtension),\n              ...createConfig\n          )\n}\n"]},"metadata":{},"sourceType":"script"}